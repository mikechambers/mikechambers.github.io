<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mike Chambers]]></title>
  <link href="http://mikechambers.github.io/atom.xml" rel="self"/>
  <link href="http://mikechambers.github.io/"/>
  <updated>2013-12-15T16:15:00-08:00</updated>
  <id>http://mikechambers.github.io/</id>
  <author>
    <name><![CDATA[Mike Chambers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test Post]]></title>
    <link href="http://mikechambers.github.io/blog/2013/12/14/test-post/"/>
    <updated>2013-12-14T21:33:48-08:00</updated>
    <id>http://mikechambers.github.io/blog/2013/12/14/test-post</id>
    <content type="html"><![CDATA[<p>This is a simple test post.</p>

<figure class='code'><figcaption><span>foo.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">foo</span><span class="p">.</span><span class="nx">bar</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="s2">&quot;foo&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;hi&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>List</p>

<ul>
<li>One</li>
<li>Two</li>
<li>Three</li>
</ul>


<blockquote><p>This is a block quote. Lets see how it works out when it wraps. In general, I think it looks pretty good.</p></blockquote>

<p>Just testing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple HTTP Server for Local Testing]]></title>
    <link href="http://mikechambers.github.io/2012/04/08/simple-http-server-for-local-testing/"/>
    <updated>2012-04-08T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2012/04/08/simple-http-server-for-local-testing</id>
    <content type="html"><![CDATA[<p>I am currently playing around with the <a href="http://www.html5rocks.com/en/tutorials/file/filesystem/">HTML5 FileSystem API</a>, and have a need to test my files served via a web server. I could setup a virtual director for my local apache server, but given the number of simple tests and experiments I do, I wanted something easier that required little to no configuration and setup.</p>

<p>So, I put together a super simple script that uses <a href="http://docs.python.org/library/simplehttpserver.html">python&rsquo;s SimpleHTTPServer class</a>.</p>

<!--more-->


<p>Here is the script (requires that python is installed and in your path)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>python -m SimpleHTTPServer <span class="nv">$1</span>
</span></code></pre></td></tr></table></div></figure>


<p>To use it, just switch the the directory that contains your files and run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http
</span></code></pre></td></tr></table></div></figure>


<p>This will open a simple webserver on port 8000.</p>

<p>You can optionally pass in the port like so:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http 2030
</span></code></pre></td></tr></table></div></figure>


<p>Which will start a simple web server listening on port 2030.</p>

<p>Again, this is something really simple, but also very useful. If you need to quickly test a file, just switch to the directory and run the script.</p>

<p>Btw, another work around for playing with the FileSystem APIs would be to pass the:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>--allow-file-access-from-files
</span></code></pre></td></tr></table></div></figure>


<p>to Chrome when launching it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[North American Flash Community Tour]]></title>
    <link href="http://mikechambers.github.io/2012/04/02/north-american-flash-community-tour/"/>
    <updated>2012-04-02T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2012/04/02/north-american-flash-community-tour</id>
    <content type="html"><![CDATA[<p>Just as we did in Europe a couple of weeks ago, <a href="http://www.leebrimelow.com">Lee Brimelow</a> and I are doing a series of Flash get togethers in North America over the next couple of weeks. I will be talking about the <a href="http://www.adobe.com/go/flashplayer_whitepaper">roadmap for the Flash runtimes</a>, and leading a discussion around recent development in the Flash world. Lee will be showing off some of the new stuff we are working on around gaming.</p>

<p>Here are the cities and dates:</p>

<ul>
<li><a href="http://altdevblogaday.com/2012/04/02/extravagant-cheating-via-direct-x/">Denver : April 3</a></li>
<li><a href="http://meetu.ps/89800">Nashville : April 9</a></li>
<li><a href="http://www.meetup.com/Adobe-User-Group-of-Atlanta/events/56200162/">Atlanta : April 10</a></li>
<li><a href="http://eveningwithmikeandlee.eventbrite.com/">St Paul, April 11</a></li>
<li><a href="http://newyorkflexmeetup.eventbrite.com">New York, April 12</a></li>
</ul>


<p>We will also be doing meetings in San Francisco, LA, Chicago and Mexico City. Ill update this post once we finalize the details for those cities.</p>

<p>In addition to these events, Lee Brimelow is doing some additional events in Las Vegas and Tempe. Check out his <a href="http://www.leebrimelow.com/?p=3286">blog for more info</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Roadmap Whitepaper Published]]></title>
    <link href="http://mikechambers.github.io/2012/02/22/flash-roadmap-whitepaper-published/"/>
    <updated>2012-02-22T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2012/02/22/flash-roadmap-whitepaper-published</id>
    <content type="html"><![CDATA[<p>We have just posted a new whitepaper on Adobe.com. The whitepaper, titled <a href="http://www.adobe.com/go/flashplayer_whitepaper">Adobe roadmap for the Flash runtimes</a> lays out the 1 to 2 year roadmap for the Flash runtimes (primarily Adobe AIR and Flash Player). This includes information on specific planned releases, longer term player work, and supported platforms.</p>

<!--more-->


<p>This is actually the third Flash platform white paper that we have released in the past week (<a href="http://www.adobe.com/go/flashplatform_whitepapers">Adobe’s view of Flex and its commitments to Flex in the future</a>, <a href="http://www.adobe.com/go/flashplatform_whitepapers">Adobe Flash Player and Adobe AIR security</a>), and is a part of a larger process of trying to provide clear and open communications around our thinking and plans for the Flash platform.</p>

<p>The primary goal of the whitepaper is to have a single definitive resource that provides clear insight into Adobe&rsquo;s plans and thinking around the roadmap for the Flash runtimes.</p>

<p>While in the past we have been open around our plans for the Flash runtimes, there was never a single resource where developers could find all of the latest thinking and plans around those runtimes. News and information was often spread across multiple resources, including the Adobe website, Adobe blogs, personal blogs, forum posts, and even tweets. We will still leverage these various means of communications, but they will build on top of the whitepaper. As our thinking and plans around the Flash runtimes evolve, we will update the whitepaper with those new plans.</p>

<p>This is also part of some more extensive changes at Adobe to help us avoid some of the communication missteps which have caused so much consternation and frustration over the past couple of months. Not only does the publication of the whitepaper give us a clear and concise way to publish information and plans around the Flash runtimes, it also provides developers with a definitive resources on where to get the most current information around the Flash platform.</p>

<p>This speaks to another goal of the whitepapers. We understand that we have damaged our trust and credibility with the community over how we have communicated some of the recent changes around the Flash platform and that trying to regain that trust is a long term process. We have to be clear and open around our plans around the Flash runtimes, and then demonstrate that we can follow up those plans with actions. This whitepaper lays the foundation of the first part of that, and hopefully our actions and runtime releases over the next 6 to 12 months will demonstrate the second part.</p>

<p>Finally, as part of the release of the whitepaper, I and some other members of the Flash and evangelist teams will be visiting user groups world wide. This will be an opportunity to go over the roadmap in more detail, have a frank and open discussion around recent changes around Flash, as well as discuss Flash&rsquo;s role on the web and how it related to HTML5. The first set of meetings are over the <a href="http://www.mikechambers.com/blog/2012/02/13/in-europe-to-discuss-flash-roadmap/">next two weeks in Europe</a>, and we will announce more for North and South America, and Asia over the next couple of weeks. If you would be interested in hosting a meeting, just shoot me an email at <a href="&#109;&#x61;&#105;&#108;&#x74;&#x6f;&#x3a;&#x6d;&#x65;&#x73;&#x68;&#64;&#97;&#x64;&#x6f;&#98;&#x65;&#46;&#99;&#x6f;&#109;&#x2e;">&#109;&#x65;&#115;&#x68;&#64;&#x61;&#100;&#x6f;&#98;&#101;&#46;&#99;&#x6f;&#x6d;&#x2e;</a></p>

<p>We are already planning an update for the whitepaper in a couple of weeks, so if you find anything is not clear, or would like it to cover other topics, please post them in the comments, or shoot me an email.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In Europe to Discuss Flash Roadmap]]></title>
    <link href="http://mikechambers.github.io/2012/02/13/in-europe-to-discuss-flash-roadmap/"/>
    <updated>2012-02-13T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2012/02/13/in-europe-to-discuss-flash-roadmap</id>
    <content type="html"><![CDATA[<p>If you follow me on <a href="http://www.twitter.com/mesh/">twitter</a>, then you may have noticed that I have been working on a white-paper laying out the roadmap and strategy for the Flash runtimes (Flash Player and Adobe AIR). The white-paper is going through internal review now, and should be available in the next 7 to 10 days.</p>

<p>As part of the release of the white-paper, I, along with <a href="http://www.leebrimelow.com/?p=3261">Lee Brimelow</a>, and <a href="http://www.bytearray.org/">Thibault Imbert</a> will be spending two weeks in Europe meeting with the Flash community and laying out Adobe&rsquo;s vision and strategy for the Flash runtimes. This will be a good opportunity to speak directly with Adobe, ask questions, and general discuss recent changes around the Flash Player.</p>

<p>Here are the cities we will be visiting. Click through the links to find more information and to register for the events.</p>

<ul>
<li><a href="http://flashupdateparis.eventbrite.com/">February 22 : Paris</a></li>
<li><a href="http://www.lfpug.com/23rd-february-2012-23022012/">February 23 : London</a></li>
<li><a href="http://www.fitc.ca/events/presentations/presentation.cfm?event=125&amp;presentation_id=1783">February 26 : FITC Amsterdam</a></li>
<li><a href="http://www.flexughh.de/2012/01/18/future-of-flex-flash/">February 29 : Hamburg</a></li>
<li><a href="http://augportugal.eventbrite.com/">March 02 : Lisbon</a></li>
</ul>


<p>In addition to discussing the Flash roadmap, we will be showing off the latest Flash and Adobe AIR content, give some sneak peaks on upcoming releases, and setting aside plenty of time for open discussions and Q&amp;A.</p>

<p>The Flex team will be in Europe at the same time, discussing the future of Adobe Flex under the Apache organization. You can find information on the Flex tour <a href="http://blogs.adobe.com/flex/2012/02/flex-user-group-2012-tour-european-dates.html">here</a>.</p>

<p>We plan similar tours over the next couple of months for North and South America, and Asia. Ill post more info here once we have more details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clarifications on Flash Player for Mobile Browsers, the Flash Platform, and the Future of Flash]]></title>
    <link href="http://mikechambers.github.io/2011/11/11/clarifications-on-flash-player-for-mobile-browsers-the-flash-platform-and-the-future-of-flash/"/>
    <updated>2011-11-11T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/11/11/clarifications-on-flash-player-for-mobile-browsers-the-flash-platform-and-the-future-of-flash</id>
    <content type="html"><![CDATA[<p>I have worked with Flash and been part of the Flash community for about 12 or 13 years (over 10 of those with Macromedia and Adobe). Over that time there have been a lot of ups and down, but I think that the past couple of days have been some of the most difficult of my career. I wanted to make a post which will hopefully clarify some of the news from the past couple of days, and provide some more context around what is going on.</p>

<!--more-->


<p>First, and foremost, a couple of days ago Adobe <a href="http://blogs.adobe.com/conversations/2011/11/flash-focus.html">announced</a> the following:</p>

<ol>
<li>We are focusing work around the Flash Platform on:

<ul>
<li>Mobile Applications created with Adobe AIR.</li>
<li>Expressive content (particularly games and video) in the browser on the desktop via the Flash Player.</li>
</ul>
</li>
<li>We are further increasing the amount of resources (both money and engineer) toward HTML5 tools, solutions and browsers.</li>
<li>We are no longer going to be actively developing the Flash Player for Mobile Browsers.</li>
</ol>


<p>It is this last point which received the most attention, caused the most confusion, and essentially overshadowed all of the other information. Given the very public recent history of the Flash Player on devices this was understandable. However, it is clear that we did not do a good job of communicating why we are are making this shift in strategy. I know how frustrating this has been for the Flash community, and for that I want to apologize. Our goal was to be very clear about WHAT we were doing, but in doing so, we didn&rsquo;t pay enough attention to explaining WHY we were doing it.</p>

<p>So, please bear with me as this may up being a long post, but I want to talk about the why, as well as discuss what we see as the role of Flash on the web (especially in relation to HTML5).</p>

<p>First, I want to make it very clear that we are continuing to work on Adobe AIR for mobile applications, and have seen an increasing number of successful applications created with Adobe AIR. What we are halting is further development on the Flash Player plugin for mobile browsers. We will continue to provide critical bug fixes and security updates for existing device configuration, as well as continue to distribute the current player. At the same time, we are further increasing our investment (both in resources and engineers) in HTML5. I am not going to go into too much detail on this today, but, in general, we are shifting some resources from the Flash Platform and towards HTML5.</p>

<p>The decision to stop development of the Flash Player plugin for mobile browsers was part of a larger strategic shift at Adobe, one which includes a greater shift in focus toward HTML5, as well as the <a href="http://blogs.adobe.com/conversations/2011/11/adobe-creative-cloud-and-adobe-creative-suite-new-choices-for-customers.html">Adobe Creative Cloud</a> and the services that it provides. I am not going to go into detail on that today (I&rsquo;ll save that for another post), but you can get in-depth information on Adobe&rsquo;s strategy as a company by watching the Financial Analyst meeting (<a href="http://www.adobe.com/aboutadobe/pressroom/pressreleases/201111/110811AdobeFinancialAnalystMeeting.html">summary</a>, <a href="http://www.adobe.com/aboutadobe/invrelations/2011_analyst_mtg/2011analystmeeting.html">videos</a>) from a couple of days ago (it is long, but worth it).</p>

<h2>Why did Adobe Decide to no longer develop the Flash Player for Mobile Browsers?</h2>

<p>Considering how politically charged the issue has been, the decision to stop development of the Flash Player for Mobile Browsers was not an easy decision. However, at the end of the day, there were a number of items that made it clear that putting resources towards its continued development would not be the best use of resources.</p>

<h3>The Flash Player was not going to achieve the same ubiquity on mobile as it has on the desktop</h3>

<p>This one should be pretty apparent, but given the fragmentation of the mobile market, and the fact that one of the leading mobile platforms (Apple&rsquo;s iOS) was not going to allow the Flash Player in the browser, the Flash Player was not on track to reach anywhere near the ubiquity of the Flash Player on desktops.</p>

<p>This effectively meant that if you wanted to use Flash to deliver a rich web experience in the browser on mobile devices you would have to provide both a Flash based, as well as HTML5 based solution. Given the strong support for HTML5 across modern mobile devices, it simply made more sense to create an HTML5 based solution. Now, there are some exceptions to this, especially around advanced video content, but it is very clear that HTML5 is the solution to turn to if you want to provide a richer browser based experience that works across browsers on mobile devices.</p>

<p>Just to be very clear on this. No matter what we did, the Flash Player was not going to be available on Apple&rsquo;s iOS anytime in the foreseeable future.</p>

<h3>Ubiquity of HTML5 on mobile browsers</h3>

<p>Related to the point above, HTML5 has very strong support on modern mobile devices and tablets. Indeed, on mobile devices, it has a level of ubiquity similar to what the Flash Player has on the desktop. While performance and implementations haven&rsquo;t always been great or consistent across devices, they have continued to improve at a pretty dramatic rate (just look at the insane Canvas performance increases between iOS 4 and 5).</p>

<p>This new generation of smart phones and tablets (ushered in by the original Apple iPhone) are only a couple of years old. Because of this, the rendering engines deployed on these devices (most WebKit based) were all also relatively new and modern. The end result is that when developing for mobile devices and tablets today, you don&rsquo;t have to deal with legacy browsers as you do on the desktop.</p>

<p>On mobile devices HTML5 provides a similar level of ubiquity that the Flash Player provides on the desktop. It is the best technology for creating and deploying rich content to the browser across mobile platforms.</p>

<p>Our goal has always been to obtain the same level of ubiquity for the Flash Player on mobile browsers, but, at the end of the day, it is something that did not, and was not going to happen.</p>

<h3>Differences in how users consume rich content on mobile devices compared to the desktop</h3>

<p>On the desktop, users are used to consuming rich content (such as games and applications) via both the browser and native applications. However, on mobile devices users are much more likely to look exclusively toward applications for consuming rich content. The mobile platforms make it very easy to discover new content and applications by providing tight integration between the app stores (Apple App Store, Android Marketplace, etc..) and the mobile operating system. In general, users do not look to the web on mobile devices for finding and consuming rich content (such as games and applications).</p>

<p>There are a number of reasons for this, including:</p>

<ul>
<li>Differences in screen sizes, resolution and interaction models between mobile devices and desktop PCs</li>
<li>Generally slower, and higher latency network connections (which is often metered) on mobile devices, which makes it cumbersome, sometimes expensive, and sometimes impossible to repeatedly load rich content from the web on demand.</li>
<li>The tight integration with the underlying operating systems that native applications provide.</li>
<li>The tight integration between mobile app stores and the mobile operating systems, which removes most of the friction for discovering new content.</li>
</ul>


<p>When a user wants to play a game on a mobile device they turn to the app store for their platform. This makes it very easy for them to discover and install new content. This content can then be quickly accessed regardless of their network connectivity.</p>

<p>Essentially, users&#8217; preferences to consume rich content on mobile devices via applications means that there is not as much need or demand for the Flash Player on mobile devices as there is on the desktop.</p>

<h3>Scalability of developing plugins for mobile browsers</h3>

<p>Developing the Flash Player for mobile browsers has proven to require much more resources than we anticipated. When building the player for desktop browsers, we can target well defined plugin APIs provided by the browsers. While we do have close relationships will all of the browser vendors (including Google, Apple, Firefox, Microsoft), as a general rule we can do most of our development using the existing APIs.</p>

<p>However, in the mobile ecosystem, we have to work very closely with other companies engineers on a number of levels:</p>

<ol>
<li>Mobile Operating System Vendors (such as Google and RIM)</li>
<li>Hardware Device Manufacturers (such as Motorola and Samsung)</li>
<li>Component Manufacturers (such as NVIDIA)</li>
</ol>


<p>While we have good relationships on all levels of this ecosystem, having to do specific work for different combinations of OS, Hardware and event components has taken a significant amount of resources. For each new device, browser and operating system released, the resources required to develop, test and maintain the Flash Player also increases. This is something that we realized is simply not scalable or sustainable.</p>

<p>I have seen a couple of questions asking how Adobe AIR is different. There are a couple of differences which make AIR development significantly less resource intensive, including a more well defined API that we can target, as well as not needing to worry about differences in browsers or new browser versions. Ultimately though, developers are building successful applications with Adobe AIR, and thus it makes sense for us to continue to invest in it.</p>

<h3>Shifting some Resources from Flash to HTML5</h3>

<p>Finally, given the growth of HTML5 on both mobile and desktop browsers, we decided to more evenly balance our resources dedicate between Flash and HTML5.</p>

<p>Halting development on the Flash Player for mobile devices frees up resources for HTML5 development (tooling, frameworks, browsers).</p>

<p>I understand that not everyone may not agree with all of the conclusions drawn above. However, given these points, along with the increasing complexity and costs of developing the Flash Player for mobile browsers, we decided that further development was not the best use of our engineering resources.</p>

<h2>What does this mean for the Flash Platform in General?</h2>

<p>While there was some frustration around our dropping development of the Flash Player for mobile browsers, the main thing I saw was concern and confusion about how this would affect the Flash Platform as a whole. Were we still committed to it? Would we stop developing the Flash Player for the desktop? Is Flash really dead?</p>

<p>So, just to be very clear, contrary to what many have declared, Flash is not dead. It&rsquo;s role and focus has shifted but we feel that it still fills important roles both on the web and mobile platforms.</p>

<h3>Adobe AIR</h3>

<p>We are continuing to develop Adobe AIR for both the desktop and mobile devices. Indeed, we have seen wide adoption of Adobe AIR for creating mobile applications and there have been a number of blockbuster mobile applications created using Adobe AIR. Some recent examples of applications created for mobile devices using Adobe AIR are <a href="http://amanita-design.net/games/machinarium.html">Machinarium</a>, <a href="https://market.android.com/details?id=air.WatchESPN&amp;hl=en">Watch ESPN</a> and my personal favorite, <a href="http://tweethunt.net/">tweet hunt</a>.</p>

<h3>Flash Player for Desktop Browsers</h3>

<p>We feel that Flash continues to play a vital role of enabling features and functionality on the web that are not otherwise possible. As such, we have a long term commitment to the Flash Player on desktops, and are actively working on the next Flash Player version.</p>

<p>Of course, with the growth and continued improved browser support of HTML5, the role of Flash will change. We feel that for the foreseeable future, Flash is particularly strong in delivering advanced video, as well as providing a robust, and graphically rich gaming platform. We are focusing our Flash Player efforts around these areas.</p>

<p>Some of the features currently being worked on for the Flash Player:</p>

<ul>
<li><a href="http://www.leebrimelow.com/?p=3133">Mouse Lock Support</a></li>
<li>ActionScript Workers / Concurrency APIs</li>
<li>Telemetry / <a href="http://tv.adobe.com/watch/max-2011-sneak-peeks/max-2011-sneak-peek-monocle/">Monocle</a> Support</li>
<li>Audio API improvements, especially for better handling of low latency audio</li>
<li>New Datatypes for ActionScript 3</li>
</ul>


<p>We are also making some long term, and significant architectural changes, which will benefit the Flash Player (and developers) for years to come. This is still in the early stages, and we will have more information in the coming months.</p>

<h3>Adobe Flex</h3>

<p>I know there are a lot of questions around Adobe Flex. We are writing a separate blog post focused just on Flex which should be up shortly. I will update this post when it is live.</p>

<p>Update : The Flex Team has posted more info <a href="http://blogs.adobe.com/flex/2011/11/your-questions-about-flex.html">here</a>.</p>

<h3>Flash Professional</h3>

<p>I discussed the future of Flash Professional in a separate <a href="http://www.mikechambers.com/blog/2011/11/10/flash-professional-and-the-future/">blog post</a> yesterday, so I am not going go into detail on it here. As I stated yesterday, we are actively working on the next version of Flash Professional and have a long term commitment to it’s continued development.</p>

<h3>HTML5 and Flash</h3>

<p>Finally, I want to touch on some of my thoughts on Flash and HTML5.</p>

<p>From its beginning, Flash&rsquo;s primary role has been to enable things on the web that were not otherwise possible. Over its history, this has included things such as animation, vector graphics, sound, video, webcam and microphone support, and more. Because of its ubiquity and fast rate of adoption, it was uniquely suited to quickly introduce new features to the web.</p>

<p>Overtime, many of these Flash features were added to the browser. Time and time again, as the browsers matured things which were once done exclusively in Flash, were eventually done in the browser. The Flash Player would then add new features and the cycle would continue. This has happened over the entire history of Flash, and I expect, will continue to happen. This was something that was good for users (who got richer content earlier), Adobe (who got to sell tools and technologies), and browser vendors (who could focus their efforts on features which the Flash Player had proven to be popular and viable).</p>

<p>The key point is this. If a Flash feature is successful, it will eventually be integrated into the browser, and developers and users will access it more and more via the browser and not Flash.</p>

<p>With the renewed competition in the browser market and the subsequent acceleration of new HTML5 features being added to browsers, the number of things possible in the browser has dramatically increased. This includes a lot of overlap with features that were once exclusive to the Flash Player. While it will still be a while before HTML5 / CSS3 features have the same ubiquity as the Flash Player currently has, the trend is very clear. A lot of the things that you have done via Flash in the past, will increasingly be done via HTML5 and CSS3 directly in the browser.</p>

<p>I think that is important enough that I should repeat it.</p>

<p>A lot of the things that you have done via Flash in the past, will increasingly be done via HTML5 and CSS3 directly in the browser.</p>

<p>I know that this is a bit scary for a lot of people who have made their career working with Flash. I completely get that. However, I think it is a HUGE opportunity for the Flash community. As browser support for richer content and motion graphics improves, so will demand for designers and developers who have experience working with motion graphics on the web. The Flash community has been doing this type of work on the web for over a decade and is uniquely qualified to fill demand for similar work in the browser. I don&rsquo;t think it is a coincidence that some of the most cutting edge motion graphics work being done in HTML5 today is being done by developers and agencies with extensive experience in Flash (such as <a href="http://gskinner.com/">Grant Skinner</a>, <a href="http://automatastudios.com/the-endless-mural/">Branden Hall</a>, <a href="http://www.bigspaceship.com/">Big Spaceship</a>, etc&hellip;).</p>

<p>I am not suggesting that all Flash content should or will be done in HTML5. You have to look at each project on a case by case basis and make a decision based on development costs, target platforms and user experience. Regardless, your customers are going to ask about HTML5, and you should put yourself in a position to best meet their needs, regardless of technology or platform.</p>

<p>This has ended up much longer than I had expected, but I wanted to share a lot of stuff that has been going through my head over the past couple of days. Again, I understand the frustration about how all of this was originally communicated, and I want to apologize for that. I think it is pretty clear that we did not communicate the news and our views around Flash as clearly as we should have.</p>

<p>Please post and questions / comments below. Please keep all comments constructive and on topic (or else they may be moderated).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Professional and the Future]]></title>
    <link href="http://mikechambers.github.io/2011/11/10/flash-professional-and-the-future/"/>
    <updated>2011-11-10T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/11/10/flash-professional-and-the-future</id>
    <content type="html"><![CDATA[<p>Yesterday was probably one of the most overwhelming days of my entire career. First, Adobe <a href="http://blogs.adobe.com/conversations/2011/11/flash-focus.html">informed</a> developers that we are going to stop developing the Flash Player for mobile browsers, then news came out that there were layoffs at Adobe, and finally, Adobe held a financial analyst meeting where we spelled out the <a href="http://blogs.adobe.com/conversations/2011/11/adobe-creative-cloud-and-adobe-creative-suite-new-choices-for-customers.html">Creative Cloud</a>, and the fundamental strategic shift Adobe is making.</p>

<p>All of this news is a lot to digest at once, and I know that there are a lot of questions and concerns from the community about what all of this means. I am working on another blog post which will address this from the Flash community&rsquo;s standpoint, but I wanted to make a quick post and debunk a rumor that has been going around about the future of Flash Professional.</p>

<!--more-->


<p>I have seen a couple of versions of it, but basically, the rumor is that the entire Flash Authoring team was laid off and that we are no longer developing Flash Professional.</p>

<p>Both of these rumors are false.</p>

<p>We are actively working on the next version of Flash Professional and have a long term commitment to it&rsquo;s continued development.</p>

<p>While there were layoffs on the team (as there were on a lot of other teams), we still have a team actively working on future versions of the tool. The Flash Professional team continues to have offices around the world, just as they did prior to the announcements. The core team, including product management and engineering members, continue and will continue to be based in San Francisco.</p>

<p>I can&rsquo;t go into a ton of detail about all of the new features and improvements included in the next version of Flash Professional (we gave a sneak of some of them at FOTB Brighton last month), but some of the new features include:</p>

<ul>
<li>SpriteSheet export for both <a href="http://www.starling-framework.org/">Starling</a> and HTML5 / Canvas. Lee Brimelow has a sneak <a href="http://www.leebrimelow.com/?p=3104">here</a>.</li>
<li>Support for packaging and exporting AIR applications for mobile that leverage native extensions.</li>
<li>Mobile prototyping and simulation for AIR apps.</li>
</ul>


<p>In addition to working on new features, we are also in the process of a pretty fundamental re-factoring and modernization of the tool&rsquo;s code base, which, among other things includes a de-carbonization of the tool on the mac platform. This is longer term project, being done in parallel with CS 6.0 development.</p>

<p>I am going to be speaking at FITC Tokyo in a couple of weeks, and will be showing some of the latest stuff we have been working on in Flash Professional.</p>

<p>I understand the confusion and frustration around everything that has been going on, and I know how difficult the past couple of days have been (probably the most difficult of my entire career). As I mentioned above, I am working on a broader blog post to discuss some of the news from yesterday, which will hopefully provide more information and clarification around all of the changes going on.</p>

<p>Please post any questions in the comments, and please keep comments on topic.</p>

<p>UPDATE : Just a quick reminder, but please keep comments on topic (about Flash Professional). I know there are a lot of questions about just about everything Flash, and I am working on a post to address them.</p>

<p>UPDATE : Added some clarification around team composition.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5 Camp Tokyo : State of the Web Slides]]></title>
    <link href="http://mikechambers.github.io/2011/08/02/html5-camp-tokyo-state-of-the-web-slides/"/>
    <updated>2011-08-02T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/08/02/html5-camp-tokyo-state-of-the-web-slides</id>
    <content type="html"><![CDATA[<p>I am in Tokyo for the week and just spoke at the <a href="http://www.adobe.com/jp/joc/adc/meetup/round02/">Tokyo HTML5 Camp</a>, giving a talk on some of the lessons learned from working on <a href="theexpressiveweb.com">theexpressiveweb.com</a>, and talking about Adobe and HTML. I have posted the slides with notes online.</p>

<p><a href="http://mikechambers.github.io/html5/presentations/state_of_the_web.pdf"><img src="http://mikechambers.github.io/html5/presentations/state_of_the_web_title.png" alt="title" /></a></p>

<p><a href="http://mikechambers.github.io/html5/presentations/state_of_the_web.pdf">Download Slides</a> (26mb pdf).</p>

<p>If you have any questions or suggestions please post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Timing Issues When Animating With CSS3 Transitions]]></title>
    <link href="http://mikechambers.github.io/2011/07/20/timing-issues-when-animating-with-css3-transitions/"/>
    <updated>2011-07-20T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/07/20/timing-issues-when-animating-with-css3-transitions</id>
    <content type="html"><![CDATA[<p>I have been playing around a lot lately with motion graphics created using HTML5 and / or CSS3. One of my favorite new features is <a href="http://www.w3.org/TR/css3-transitions/">CSS Transitions</a>, which makes it super simple to animate element properties between two states.</p>

<p>However, I ran into a gotcha the other day, and wanted to make a quick blog post in case anyone else runs into it in the future. Basically, if you change a property that a CSS Transition is monitoring in the same script loop that you add the element to the DOM, the CSS Transition will not take affect. Instead, the element will be drawn with the new properties, and will not animate to those properties.</p>

<p>Here is an example that shows the issue, as well as how to fix it.</p>

<!--more-->


<p>First the relevant styles for the CSS Transition:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.box</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c">/*...*/</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="n">all</span> <span class="m">0.7s</span> <span class="n">ease</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="n">all</span> <span class="m">0.7s</span> <span class="n">ease</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">o</span><span class="o">-</span><span class="n">transition</span><span class="o">:</span> <span class="n">all</span> <span class="m">0.7s</span> <span class="n">ease</span><span class="p">;</span>
</span><span class='line'>  <span class="n">transition</span><span class="o">:</span> <span class="n">all</span> <span class="m">0.7s</span> <span class="n">ease</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<iframe src="http://mikechambers.com/html5/css/CSS3TransitionsTiming/index.html" width="520" height="300"></iframe>


<p>Notice how when you click the example the cirlce just appears on the right, instead of appearing on the left, and then animating to the right as it should.</p>

<p>Here is the relevant code that creates the div and updates it position:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">onMouseClick</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">box</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//remove existing box from dom</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//create the div</span>
</span><span class='line'>  <span class="nx">box</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&quot;box&quot;</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//add to dom</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//position in middle / left of screen</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="s2">&quot;10px&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//set position we want div to animate to (using the CSS Transition)</span>
</span><span class='line'>  <span class="c1">//NOTE : This will not animate, but will instead just be moved / drawn</span>
</span><span class='line'>  <span class="c1">//in the final position</span>
</span><span class='line'>  <span class="c1">//need to delay this call by 20 ms</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span> <span class="o">-</span> <span class="mi">100</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/CSS/CSS3TransitionsTiming">View / Download Code</a></p>

<p>The solution, is to delay changing the properties that you want to animate by a short time interval. I have found that for most browsers a delay of as little as one second is enough to allow the CSS transition to take effect. However, for Firefox, the first time an element is added, I had to add a delay of 20ms in order to ensure the element animated correctly. However, subsequent animations could use a 1 ms delay. I am not sure if the delay interval is browser specific, or is related to how fast the users CPU is.</p>

<p>Setting the delay can be done using setTimeout.</p>

<p>Here is the update example, and code:</p>

<iframe src="http://mikechambers.com/html5/css/CSS3TransitionsTiming/index_b.html" width="520" height="300"></iframe>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">onMouseClick</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">box</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//remove existing div from dom</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//create the div</span>
</span><span class='line'>  <span class="nx">box</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="s2">&quot;box&quot;</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//add to dom</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">box</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//position in middle / left of screen</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="s2">&quot;10px&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//delay updating position so it will animate correctly</span>
</span><span class='line'>  <span class="nx">setTimeout</span><span class="p">(</span><span class="nx">moveBox</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="nx">box</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">moveBox</span><span class="p">(</span><span class="nx">box</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">box</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span> <span class="o">-</span> <span class="mi">100</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;px&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/CSS/CSS3TransitionsTiming">View / Download Code</a></p>

<p>The only change, is that we moved the code to update the divs position to its own function. This allows us to then use setTimeout to delay the code from being called for 1 ms. By doing this, the div will be added to the dom, and positioned in the correct initial position, and then animate to its new position.</p>

<p>Here is another example that uses setTimeout to animate newly created DIVs.</p>

<iframe src="http://mikechambers.com/html5/css/CSS3TransitionsAnimation/" width="520" height="400"></iframe>


<p><a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/CSS/CSS3TransitionsAnimation">View / Download Code</a></p>

<p>Post in the comments if you have any questions or suggestions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JTV Live : A Google Chrome Extension for Justin.tv]]></title>
    <link href="http://mikechambers.github.io/2011/07/06/jtv-live-a-google-chrome-extension-for-justin-tv/"/>
    <updated>2011-07-06T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/07/06/jtv-live-a-google-chrome-extension-for-justin-tv</id>
    <content type="html"><![CDATA[<p>UPDATE : June 6, 2012 : Due to a change in the Justin.tv APIs, this extension no longer works with Twitch.tv accounts. I have created a new extension, called <a href="http://bit.ly/12y53wj">Twitch Live</a> which works with Twitch.tv accounts. Sorry about the hassle.</p>

<p>Since I started playing <a href="http://us.battle.net/sc2/en/">Starcraft 2</a>, I have become a pretty big fan of e-sports, and in particular, of watching streams of games. The most popular site for streaming is <a href="http://justin.tv">Justin.tv</a>, where you can find tons of high level gamers streaming their gameplay. However, Justin.tv&#8217;s site does not make it easy to find out which of your favorite streams are live at any particular time.</p>

<p>So, to solve this problem, I created <a href="https://chrome.google.com/webstore/detail/eojkhidnkbolpneigllnelngopamnafa">JTV Live</a>, a Google Chrome extension for helping you track which of your favorite Justin.tv streams are live.</p>

<!--more-->


<p><a href="http://www.flickr.com/photos/mikechambers/5909364802/"><img src="http://farm6.static.flickr.com/5152/5909364802_c90fdd7798.jpg" alt="title" /></a></p>

<p><a href="https://chrome.google.com/webstore/detail/eojkhidnkbolpneigllnelngopamnafa">Download JTV Live from the Chrome Web Store</a></p>

<p>Using the extension is pretty simple. Once you install it, a small TV / Monitor icon will be placed in the top right of your browser bar. Right click on the icon, select options, and enter your Justin.tv user name.</p>

<p>Once you have done this, you can click the icon, and it will show you a list of which of your favorite Justin.tv streams are currently online as well as how many people are viewing each stream.</p>

<p>Big thanks to <a href="http://twitter.com/griffithben">Ben Griffith</a> for working on the design of the extension and creating the icon.</p>

<p>If you run into any issues, or have any suggestions please post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Streaming Your Desktop on Mac OS X]]></title>
    <link href="http://mikechambers.github.io/2011/05/29/setting-up-desktop-streaming-on-mac-os-x/"/>
    <updated>2011-05-29T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/05/29/setting-up-desktop-streaming-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>I have been playing a lot of <a href="http://us.battle.net/sc2/en/">Starcaft 2</a> lately, and really getting into the entire <a href="http://www.reddit.com/r/starcraft">community</a>. One part of the community that I recently discovered has been live streams of games (some from pros) via sites like <a href="http://justin.tv">justin.tv</a> and <a href="http://www.ustream.tv/">ustream.com</a>. There are plenty of articles online talking about how to stream your desktop on Windows based machines, but virtually none on how to do it from a Mac. This article will show how to use Adobe Flash Media Live Encoder (and a couple of other tools) to live stream your desktop to justin.tv (although the setup would also work for other streaming sites).</p>

<!--more-->


<p>I am going to divide the article up into a couple of sections. The first part will show how to get a basic desktop stream going, including system sound. The second section will show a more advanced sound setup that allows you to also broadcast your microphone, and audio from other apps such as skype.</p>

<h2>Basic Desktop Streaming Setup</h2>

<p>The basic setup will allow us to stream our desktop and system audio to justin.tv. This requires the following software:</p>

<ul>
<li><a href="http://www.adobe.com/products/flashmediaserver/flashmediaencoder/">Adobe Flash Media Live Encoder (FMLE) 3.2 for Mac</a> : Encodes and streams video and audio to justin.tv</li>
<li><a href="http://allocinit.com/index.php?title=CamTwist">CamTwist</a> : Used to capture desktop as a video source</li>
<li><a href="http://cycling74.com/products/soundflower/">Soundflower</a> : Utility used to capture and redirect system output</li>
<li>justin.tv config file : Only required if you are streaming to justin.tv (link provided below)</li>
</ul>


<p>The basic setup is pretty simple, and essentially requires setting up CamTwist to capture your desktop as a video source, and have Flash Media Live Encoder take that video source, combine it with the system audio, and stream it to the server (in this case justin.tv).</p>

<h3>A Note on Performance</h3>

<p>Keep in mind that encoding and broadcasting live video feeds can be very CPU intensive, and thus may require significant system resources. Depending on what you are streaming, this may affect other applications running on your system, or even the quality of the stream.</p>

<h3>Configuring CamTwist</h3>

<p>First, download and install CamTwist. Once it is installed, open it up, and under the Step 1 section, double click &ldquo;Desktop&rdquo; (not &ldquo;Desktop+&rdquo;). &ldquo;Desktop+&rdquo; allows you to select a specific window to broadcast, but since we are going to be broadcasting our entire desktop, we will just use the Desktop preset.</p>

<p>You can save these settings by clicking the &ldquo;Save Setup&rdquo; button.</p>

<p>Do not select any effects in Step 2.</p>

<p>In Step 3 make sure that &ldquo;Desktop&rdquo; is included and checked. In the settings window, make sure that screen is set to &ldquo;Main Screen&rdquo;. This ensures that only the main screen will be broadcast (which only matters if you have multiple monitors).</p>

<p>Also make sure that &ldquo;Full Screen&rdquo; and &ldquo;Show mouse pointer (simulated)&rdquo; are selected.</p>

<p>Once you have set all of these settings, you can save them by clicking the &ldquo;Save Setup&rdquo; button.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/camtwist_main.png" alt="title" /></p>

<p>Now, open the preferences (<em>CamTwist > Preferences</em>), and select the &ldquo;General Tab&rdquo;. Set the frame rate to the same frame rate you plan to encode at. I am using 24 FPS. The higher the FPS, the smoother the video, but the more bandwidth and CPU required to encode and transmit it.</p>

<p>Set video size to &ldquo;Custom&rdquo; and set it to your desktop resolution. In my case, I have it set to 1920 x 1200, which is my native desktop resolution. Set it to the native resolution even if you are going to broadcast at a lower resolution. We will have Adobe Flash Media Live Encoder scale the video down, as my experience has been that it does it much more efficiently than CamTwist.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/camtwist_preferences.png" alt="title" /></p>

<p>Once you have set the preferences, close the window and restart CamTwist. Make sure the &ldquo;Desktop&rdquo; section is selected. You can test that everything is working by selecting <em>Tools > Preview</em>, which will give you a small preview of the video being captured.</p>

<h3>Configuring Audio with Soundflower</h3>

<p>In order to capture audio, we need a way to capture the system&#8217;s audio output, and make it an input for Flash Media Live encoder. Mac OS X does not have native support for doing this, but the free Soundflower utility enabled this.</p>

<p>Soundflower is a utility that can combine multiple audio outputs and redirect them into a single audio output. We can use this to capture system audio, and pass it on to FMLE to include the audio for our video stream.</p>

<p>First, download and install <a href="http://cycling74.com/products/soundflower/">Soundflower</a>. Once it is installed, launch it. It won&#8217;t open an application window, but will add a small menu item icon (a flower) on the top right of the menu bar.</p>

<p>We need to tell OS X to direct system audio output to Soundflower. Open Sound preferences (<em>System Preferences > Sound > Output</em>) and select &ldquo;Soundflower (2ch)&rdquo;.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/sound_settings_basic.png" alt="title" /></p>

<p>Basically, anything that you would hear through your speakers will now be directed first through Soundflower.</p>

<p>Next, click the Soundflower icon on the menu bar, and for &ldquo;Soundflower (2ch)&rdquo; select what you would normally have set as your system output (such as headphone, or Line-Out). This will redirect the audio through Soundflower, and pass it through your normal output so you can still hear it. However, because it is first directed through Soundflower, we can now also use that as an input source in FMLE.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/soundflower_basic.png" alt="title" /></p>

<p>There is a lot more advanced stuff we can do with Soundflower, which we will cover later in the article.</p>

<h3>Configuring Adobe Flash Media Live Encoder</h3>

<p><a href="http://www.adobe.com/products/flashmediaserver/flashmediaencoder/">Adobe Flash Media Live Encoder</a> (FMLE) is a free tool provided by Adobe that can take a video and audio feed, and create either a VP6 or H.264 encoded video stream that can be streamed to servers and sites such as justin.tv.</p>

<p>Download and install the latest version of FMLE (this article is using version 3.2). If CamTwist is not already running, go ahead and open it. Once FMLE is installed, open it up.</p>

<p>Now, before we start changing settings, we need to first download a config file for our specific justin.tv account. This will include information specific to our account that justin.tv uses to determine which account the stream is associated with. If you are not using justin.tv, you may to skip this section, although you may need to look up docs on how to configure the stream for your specific server.</p>

<p>Log into your justin.tv account, and then visit <a href="http://www.justin.tv/broadcast/adv_other">this page</a>. At the bottom of the page is section for &ldquo;Flash Media Encoder&rdquo;. Click the &ldquo;Config File&rdquo; button. This is the XML config file for FMLE specific for your justin.tv account. Click the button and download the file to your desktop.</p>

<p><strong>Note</strong> : This file will allow anyone who has it to stream to your justin.tv account, so be careful to protect it.</p>

<p>Once you have downloaded the file, we are ready to import it into FMLE. Switch to FMLE and select <em>File > Open Profile</em>. You may get a warning that some tags are not support, and defaults are being used. Just ignore this.</p>

<p>If you look in the output panel on the right side of FMLE, you should see the FMS URL set to something like: <em>rtmp://live.justin.tv/app</em>, and the stream attribute have a value similar to: <em>live_12345678_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</em>.</p>

<p>Again, this second string is specific to your account, and will allow anyone to stream to your justin.tv account. You can hide the panel it is shown in (so it wont be displayed on your stream), by selecting &ldquo;Panel Options&rdquo; and setting it to &ldquo;Meta Data&rdquo; (so the panel wont be displayed). Note that you may need to do this each time your start FMLE.</p>

<p>We are now ready to set up the encoding options for FMLE. First, we will setup the video encoding settings. Some of the settings may vary depending on your system, but I will point out where and why you might want to tweak them.</p>

<h4>FMLE : Video Settings</h4>

<p>First, in the video panel, make sure that &ldquo;Video&rdquo; is checked. For &ldquo;Device&rdquo;, select &ldquo;CamTwist&rdquo;. If &ldquo;CamTwist&rdquo; does not appear as an option, make sure that CamTwist is running and is set to broadcast the desktop. If it isn&#8217;t, start it, and then restart FMLE.</p>

<p>Once you have selected CamTwist, you can confirm that it is working by making sure &ldquo;Input Video&rdquo; is selected in the &ldquo;Preview&rdquo; panel at the top. With this selected, you should see the video feed preview of your desktop.</p>

<p>Next, we need to set the video codec we will be encoding to as well as its options. There is a choice between H.264 and VP6. I am not going to go into a discussion about which is better. In general though H.264 offers higher quality at lower bitrates, with slightly higher CPU usage, while VP6 offers lower quality, with higher bitrates and slightly lower CPU usage. For this article, I will be using H.264 to stream to the server.</p>

<p>Select “H.264” as the Format, and click the little wrench icon. This will open a panel where we can set additional setting specific to the codec.</p>

<p>Set the profile to &ldquo;Main&rdquo;.</p>

<p>The &ldquo;Level&rdquo; value will vary depending on the resolution you will be encoding at. In our case, I will be encoding at 720p (1280 x 720) at 24 FPS, so I need to set the level to &ldquo;3.1&rdquo;. You can find a list of levels and resolutions / FPS in the <a href="http://en.wikipedia.org/wiki/H.264/MPEG-4_AVC#Levels">H.264 wikipedia article</a>.</p>

<p>Finally, we need to set the Keyframe Frequency. This determines how frequently keyframes (complete captures of the image) are inserted into the stream. We will use the default of &ldquo;5&rdquo;.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/advanced_encoder_settings.png" alt="title" /></p>

<p>Once you have set the codec settings, click the &ldquo;OK&rdquo; button.</p>

<p>Back in FMLE, set the Frame Rate to &ldquo;24.00&rdquo; fps. Higher framerates provide smoother video, but require more CPU and bandwidth. Lower framerates provide choppier video, but require less CPU and bandwidth. I think that 24 FPS is a good middle ground, but feel free to experiment. Just remember that if you change this, you should also change it in the CamTwist preferences, so they are the same.</p>

<p>Set &ldquo;Input Size&rdquo; to the size that you will be broadcasting / encoding at. We do this, even though the input received from CamTwist is a higher resolution. FMLE will scale the video to the appropriate size. It has been my experience that this uses less CPU that having CamTwist do the scaling.</p>

<p>We could set input size to the full resolution of the input stream, and then have the output size as a scaled down stream. However, in my case, i have a 16:10 stream resolution which FMLE currently doesn’t support, which would result in part of the stream being chopped at the top and bottom. By having the scaling done at the Input Size, I was able to get the content scaled correctly, without having any part of the stream cropped. (If anyone has more feedback on this, please post it in the comments.).</p>

<p>Make sure that &ldquo;Maintain Aspect Ratio&rdquo; is also checked for &ldquo;Input Size&rdquo;. This prevents the video from being skewed when it is scaled.</p>

<p>Now, FMLE can encode and output multiple streams and sizes (which I believe justin.tv supports), however, we will just be broadcasting one stream.</p>

<p>Make sure the first stream is checked, and set the &ldquo;Bit Rate&rdquo; to &ldquo;1000&#8243; kbps. This setting basically specifies how much data is included in the stream. The higher the value, the clearer the image (less compression) and the more bandwidth required. The main thing to consider when setting this is how much upstream bandwidth you have available. You can get a general idea by doing a <a href="http://www.speedtest.net">speed test</a> and looking at the upload results. On the right of the stream section in FMLE, will be an estimate of the total bandwidth required to stream at the current setting. You want to make sure that you have some buffer between what you are sending, and what your upstream bandwidth is. Otherwise, viewers of your stream may see frequent drops and stutters.</p>

<p>To start with, I would set it at 1000, test, and then move the value up (in increments of 500) until you find a good balance between bandwidth usage and video quality.</p>

<p>Set the &ldquo;Output Size&rdquo; to the output size you want to stream at. For this article, we will be streaming at 720p (&ldquo;1280 x 720&#8243;), which is a standard HD resolution, and I feel provides a good tradeoff for providing high quality stream for the bandwidth required. Again, adjusting the resolution will affect the amount of bandwidth required for the stream.</p>

<p>You can leave both &ldquo;Deinterlace&rdquo; (since we are running at 720p) and &ldquo;Timecode&rdquo; unchecked.</p>

<h4>FMLE : Audio Settings</h4>

<p>Audio settings are a bit less involved than video settings, and mostly requires finding a balance between quality and bandwidth required.</p>

<p>Make sure that &ldquo;Audio&rdquo; is checked at the top of the Audio section.</p>

<p>For &ldquo;Device&rdquo;, select &ldquo;Soundflower (2ch)&rdquo;. If this does not appear, make sure Soundflower is running. If it is not, start it and restart FMLE.</p>

<p>Once it is set, you can test that is is working by checking &ldquo;Audio&rdquo; in the preview panel and thenm play an audio source on your system. You should see the audio levels reflected in the preview panel (on the right). You should also be able to hear the audio through your headphones / speakers. If you dont, make sure that you have set the output correctly in Soundflower (see above).</p>

<p>For Format, select &ldquo;Mp3&#8243;, and set &#8220;Channels&rdquo; to &ldquo;Stereo&rdquo; and &ldquo;Sample Rate&rdquo; to &ldquo;44100&#8243;.</p>

<p>The &ldquo;Bit Rate&rdquo; setting determines how much data is used to encode the audio. Higher values mean clearer audio / less compression but require more bandwidth. Unless you are streaming high quality audio / music, then 128 Kbps should be fine, and depending on your bandwidth, you may want to set it slightly lower.</p>

<p>Turn the volume all the way up.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/flme_settings.png" alt="title" /></p>

<p>At this point, look at the bandwidth required estimate under the Volume setting. Make sure this is not too high in relation to your upstream bandwidth. You want to ensure there is some padding for data spikes, or if your available bandwidth goes down a bit. If the bandwidth required is too high, then go through and tweak the settings (see above) until you get the bandwidth to an acceptable level. You may need to do some live testing to find the best compromise between audio / video quality and required bandwidth.</p>

<p>Now that we have entered all of the settings, we want to save our FMLE profile, so we can easily use it again. Select <em>File > Save Profile</em> and save the profile onto your system. By default, FMLE will open with the last settings used, but you can also open the saved profile by going to <em>File > Open Profile</em>.</p>

<p>All that is left to do, is to start the stream, and make sure everything is working with justin.tv. Click the green &ldquo;Start&rdquo; button and switch over to your justin.tv channel. You should see your desktop and audio being streamed on your channel (there may be some delay between your desktop and the playback on the stream).</p>

<p>Make sure audio and video quality are good. If they are not, then stop the stream, tweak the settings and try again.</p>

<p>If you run into any errors, just check the &ldquo;Encoding Log&rdquo; panel in FMLE (which will open when you start the stream). You can also get general statistics on your stream in the Encoding pane which can be useful for trying to track down issues.</p>

<h3>General Trouble Shooting</h3>

<h4>Audio Not working</h4>

<p>If audio is not working, make sure:</p>

<ul>
<li>Soundflower is running</li>
<li>Soundflower was launched before FMLE was opened</li>
<li>Soundflower is set correctly as the Output in system Sound preferences</li>
<li>Try stopping and starting the stream in FMLE</li>
</ul>


<p>If audio is working on stream, but not locally, make sure that:</p>

<ul>
<li>Correct output is set in Soundflower</li>
</ul>


<h4>Video not working</h4>

<p>If the video stream is not working:</p>

<ul>
<li>Make sure that CamTwist is running, and is configured to output the desktop</li>
<li>Make sure that CamTwist was started before FMLE was started</li>
<li>Make sure that Video is selected in FMLE</li>
<li>Make sure you you downloaded and loaded the justin.tv config file</li>
<li>Try stopping and starting the stream in FMLE</li>
</ul>


<p>If video is choppy on justin.tv</p>

<ul>
<li>Adjust audio and video settings in FMLE

<ul>
<li>Video output resolution</li>
<li>Video output Bit Rate</li>
<li>Audio output Bit Rate</li>
<li>Increase Keyframe interval for H.264</li>
</ul>
</li>
<li>Check system resources (view in Activity Monitor) and make sure your system has enough resources to encode and stream audio in real time</li>
<li>Close any applications not necessary to streaming</li>
<li>Turn off &ldquo;Video Input&rdquo;, &ldquo;Video Output&rdquo;, and &ldquo;Audio&rdquo; previews in FMLE. </ul></li>
</ul>


<h2>Advanced Configuration for Streaming your desktop on Mac OS X</h2>

<p>The information above is all you need if you just want to stream your desktop and system audio to a remote server (such as justin.tv). However, if you want be able to also stream your microphone input or entire skype calls / conversations, then there are a couple of more steps you need to take.</p>

<p>For this section, we will be using all of the software above, along with:</p>

<ul>
<li><a href="http://www.rogueamoeba.com/freebies/">LineIn</a> : Allows you to redirect system audio inputs to audio outputs.</li>
</ul>


<p>By using LineIn, in conjunction with the applications above, you can have very advanced control over how you mix your audio on the desktop, including which audio outputs are included in your stream, and on your desktop.</p>

<p>For this example, we will be setting up our system so that:</p>

<ul>
<li>Microphone input is included in the stream, but not included in the local system output</li>
<li>Skype conversations (both local and remote) are included in the stream</li>
</ul>


<p>First, download <a href="http://www.rogueamoeba.com/freebies/">LineIn</a>, and copy it to your applications folder. We are going to need to use two instances of LineIn, and since Mac OS X will only allow us to launch one instance of an app at a time, we need to make a copy of the app and rename it. So, copy the LineIn application, and rename the copy to LineIn2.</p>

<p>Launch both LineIn and LineIn2 (their windows may overlap when they launch).</p>

<p>One feature of Soundflower which we did not discuss above, it that it creates two separate output channel (one with 2 channels, and one with 16 channels). We can use this, in conjunction with LineIn, to provide different audio feeds for the desktop and the stream.</p>

<p>In the first LineIn window, set the &ldquo;Input from&rdquo; to your local microphone input. Then, set the &ldquo;Output to&rdquo; &ldquo;Soundflower (2ch)&rdquo;. This basically takes the input from your microphone, and redirects it to the Soundflower (2ch) output (being used by FMLE).</p>

<p>Next, click the &ldquo;Pass Thru&rdquo; button to enable the changes we just made.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/linein1.png" alt="title" /></p>

<p>At this point, if you have configured your streaming according the the instructions above, your microphone input will now be included in the audio for your stream. However, if you test this, you will also notice that the microphone input is also output to your system audio (since system Sound output is set to Soundflower (2ch)). Hearing yourself in your speakers / headphone as you speak can be very confusing and distracting (not to mention annoying), so we need to configure things so microphone input is not output locally.</p>

<p>This is where the second instance of LineIn comes in. If you havent already, launch LineIn2. Set the &ldquo;Input from&rdquo; to &ldquo;Soundflower (16ch)&rdquo; and set the &ldquo;Output to&rdquo; to &ldquo;Soundflower (2ch)&rdquo;. Once you have done this, click the &ldquo;Pass Thru&rdquo; button to enable the changes.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/linein2.png" alt="title" /></p>

<p>Next, we need to set all system audio output to go to &ldquo;Soundflower (16ch)&rdquo;. Open system Sound Output settings (<em>System Preferences > Sound > Output</em>) and set output to &ldquo;Soundflower (16ch)&rdquo;. Now, all system audio output will go to &ldquo;Soundflower (16ch)&rdquo;, which is then being redirected (by LineIn) to &ldquo;Sunflower (2ch)&rdquo;.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/sound_settings_advanced.png" alt="title" /></p>

<p>At this point, we now have two separate Soundflower channels. One (&ldquo;Soundflower (2ch)&rdquo;) includes both system audio and microphone input, and one (&ldquo;Soundflower 16ch&rdquo;) includes all system audio, minus the microphone input.</p>

<p>We don’t need to change anything in FMLE, since it is already set to use Soundflower (2ch) as its audio input. However, in order to hear the correct audio locally, we need to change the Soundflower local output. Click the Soundflower icon on the menu bar. Set &ldquo;Soundflower (2ch)&rdquo; to &ldquo;None (Off)&rdquo;, and set &ldquo;Soundflower (16ch)&rdquo; to the local output you want to use (which ever output your speakers / headphone is connected to).</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/soundflower_advanced.png" alt="title" /></p>

<p>You should now be able to hear all system audio locally without hearing the microphone. However, the stream includes the audio from both the local system and microphone.</p>

<p>At this point, anything you output to &ldquo;Soundflower (16ch)&rdquo; will be included in the stream (and played locally). This means you can set other applications, such as Skype, to also output to Soundflower (16ch) in order to include them in the stream.</p>

<p>Configuring this in <a href="http://www.skype.com">Skype</a> is easy. Just open Skype, and launch the Audio / Video preferences (<em>Skype > Preferences > Audio / Video</em>). Set the &ldquo;Speakers&rdquo; to &ldquo;Soundflower (16ch)&rdquo; and close the preferences. Now any audio that comes through Skype, will be included in the stream.</p>

<p><img src="http://mikechambers.github.io/blog/images/mac_screen_broadcast/skype_settings.png" alt="title" /></p>

<p>You can do this with any application that allows you to specify sound output. You just need to keep in mind that you only have 16 channels total (which should be plenty).</p>

<p>With this setup, you can stream your desktop, system audio, local microphone and skype conversations all of the same time (useful, for example, if you are streaming multiple player games while playing / chatting with friends).</p>

<h2>Conclusion</h2>

<p>While setting up desktop streaming on Mac OS X can seem a bit daunting at first, it is not too difficult. Once you do get it setup with the configuration describe in this article, you have a lot of flexibility in how things are broadcast, including which audio sources are included / excluded.</p>

<h2>Additional Resources</h2>

<h3>Applications</h3>

<ul>
<li><a href="http://www.adobe.com/products/flashmediaserver/flashmediaencoder/">Adobe Flash Media Encoder 3.2</a></li>
<li><a href="http://allocinit.com/index.php?title=CamTwist">CamTwist</a></li>
<li><a href="http://cycling74.com/products/soundflower/">Soundflower</a></li>
<li><a href="http://www.rogueamoeba.com/freebies/">LineIn</a></li>
</ul>


<h3>Articles / Resources</h3>

<ul>
<li><a href="http://root-destiny.com/newbies-guide-to-streaming/">Beginners Guide to Desktop Streaming</a> : Great walkthrough for streaming your desktop from Windows</li>
<li><a href="http://www.justin.tv/p/camtwist">Using CamTwist with Justin.tv</a></li>
<li><a href="http://help.adobe.com/en_US/FlashMediaLiveEncoder/3.0/Using/">Adobe Flash Media Live Encoder Documentation</a></li>
<li><a href="http://www.pcworld.com/article/213034/screencast_live_how_to_make_your_own_web_tv_show.html">How To Make Your Own Web TV Show</a> : Great video series by Sean &ldquo;Day<a href="http://en.wikipedia.org/wiki/H.264/MPEG-4_AVC#Levels">9</a>&rdquo; Plott.</li>
<li><a href="http://community.justin.tv/forums/">Justin.tv forums</a></li>
<li><a href="http://forums.adobe.com/community/flash/flash_media_live_encoder">Adobe Flash Media Live Encoder Forums</a></li>
<li><a href="http://www.teamliquid.net/forum/viewmessage.php?topic_id=220584">TeamLiquid Forums Stream Quality Guide</a></li>
</ul>


<p>If you have any questions or suggestions, then post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Toggling Mute on Mac OS X With non-Mac Keyboards and Alfred]]></title>
    <link href="http://mikechambers.github.io/2011/05/23/toggling-mute-on-mac-os-x-with-non-mac-keyboards-and-alfred/"/>
    <updated>2011-05-23T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/05/23/toggling-mute-on-mac-os-x-with-non-mac-keyboards-and-alfred</id>
    <content type="html"><![CDATA[<p>I recently switched keyboards and picked up a <a href="http://www.daskeyboard.com/model-s-professional/">daskeyboard professional (model-s)</a>. This is a really nice (and satisfying) mechanical keyboard, which I really like. However, das only makes a Windows version of the keyboard, and I am running Mac OS X. In general, this isn&#8217;t an issue, as I was able to remap control keys to be in the right position, but I really missed being able to quickly toggle whether the system volume is muted.</p>

<p>I could probably use an app such as <a href="http://doublecommand.sourceforge.net/">DoubleCommand</a> to remap one of the function keys to the mute key, but I didn&#8217;t want to rely on on a third-party piece of software that I would have to configure each time I wanted to set up a new system. So, I decided to create a simple AppleScript Application that I could call from <a href="http://www.alfredapp.com/">Alfred</a> (or <a href="http://www.blacktree.com/">Quicksilver</a>) that would toggle whether the volume was muted.</p>

<!--more-->


<p>Here is the script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="nv">volumeSettings</span> <span class="k">to</span> <span class="nb">get volume settings</span>
</span><span class='line'><span class="k">if</span> <span class="nv">output</span> <span class="na">muted</span> <span class="k">of</span> <span class="nv">volumeSettings</span> <span class="ow">is</span> <span class="no">false</span> <span class="k">then</span>
</span><span class='line'>    <span class="nb">set volume</span> <span class="nv">with</span> <span class="nv">output</span> <span class="na">muted</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="nb">set volume</span> <span class="nv">without</span> <span class="nv">output</span> <span class="na">muted</span>
</span><span class='line'><span class="k">end</span> <span class="k">if</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/AppleScript/mute">Download Source and Application from my GitHub account</a>.</p>

<p>To use this, download the application (or compile the script). Save the application in a place where Alfred / Quicksilver can find it. I placed mine in my <em>/Applications</em> folder.</p>

<p>Now, when you want to toggle whether the volume is muted, just launch Alfred / Quicksilver and type mute.</p>

<p>I know its a pretty simple solution, but I wanted to share it, and post it here for future reference. If you have any suggestions or a better solution, post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Voronoi Port]]></title>
    <link href="http://mikechambers.github.io/2011/03/24/javascript-voronoi-port/"/>
    <updated>2011-03-24T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/03/24/javascript-voronoi-port</id>
    <content type="html"><![CDATA[<p>I have always been amazed by some of the <a href="http://www.flickr.com/photos/quasimondo/tags/voronoi/">digital art work</a> that <a href="http://www.quasimondo.com/">Mario Klingemann</a> (aka <a href="http://twitter.com/Quasimondo">@Quasimondo</a> has created using with <a href="http://en.wikipedia.org/wiki/Voronoi_diagram">Voronois</a>. After doing some searching, I found an early <a href="http://www.quasimondo.com/archives/000110.php">ActionScript 1 Voronoi implementation</a> that Mario did, and I ported it to JavaScript.</p>

<p>I wanted to share the results:</p>

<!--more-->




<iframe src="http://mikechambers.com/html5/easeljs/Voronoi/" width="520" height="600"></iframe>


<p>Here is a graphic I created by playing around with the code:</p>

<p><a href="http://www.flickr.com/photos/mikechambers/5532232341/"><img src="http://farm6.static.flickr.com/5256/5532232341_6788f59d19.jpg" alt="title" /></a></p>

<p>The code is pretty much a straight up port, with some minor optimizations for JavaScript. I also replaced the rendering from the Flash display list API, to <a href="http://www.easeljs.com">EaselJS</a>. All of the credit really goes to Mario who wrote the original code.</p>

<p>You can view all of the code on my <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/HTML5/EaselJS/Voronoi">GitHub repository</a>, and <a href="http://www.quasimondo.com/archives/000110.php">grab the original code from Mario&rsquo;s website</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript QuadTree Implementation]]></title>
    <link href="http://mikechambers.github.io/2011/03/21/javascript-quadtree-implementation/"/>
    <updated>2011-03-21T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2011/03/21/javascript-quadtree-implementation</id>
    <content type="html"><![CDATA[<p>Last week I was playing around with a little <a href="http://www.easeljs.com">EaselJS</a> experiment which required me to do collision detection against all items on the screen. This worked fine with a small number of items, but of course, the more items I added, the slower everything became.</p>

<p>I knew that I needed to optimize the code, and pare down the number of collision checks. I have done this before with a grid (even held a <a href="http://www.mikechambers.com/blog/tag/as3dtc1/">contest</a> for it) and was going to port that AS3 code to JavaScript. However, <a href="http://unitzeroone.com/blog/">Ralph Hauwert</a> suggested I look at implemented a QuadTree, which should be more efficient.</p>

<!--more-->


<p>A <a href="http://en.wikipedia.org/wiki/Quadtree">QuadTree</a> is a data structure in which the coordinate space is broken up into regions / nodes that contain items. If too many items are added into a node, then that node is divided into 4 sub-nodes. This can provide very fast lookup of items based on the coordinates and coordinates and dimensions.</p>

<p>There are a couple of implementations in both JavaScript and ActionScript (Michael Baczynski has a nice <a href="http://lab.polygonal.de/2007/09/09/quadtree-demonstration/">AS3 implementation</a>), but I decided that I wanted to learn a bit more and implement one from scratch.</p>

<p>The result if a QuadTree implemented in JavaScript that works with both 2D coordinates (x,y) and well as regions / items with dimensions.</p>

<p>I&rsquo;ve released all of the code under an MIT License, and you can <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/JavaScript/QuadTree">download it from my GitHub repository</a>.</p>

<p>Here is an example of the tree in action:</p>

<iframe src="http://mikechambers.github.io/html5/javascript/QuadTree/examples/collision.html" width="520" height="600"></iframe>


<p>This example shows how to use the QuadTree to pare down the number of items that need to be tested for collision detection.</p>

<p>I have created a couple of other simple examples:</p>

<ul>
<li><a href="http://mikechambers.github.io/html5/javascript/QuadTree/examples/collision.html">Collision Detection (shown above)</a></li>
<li><a href="http://mikechambers.github.io/html5/javascript/QuadTree/examples/insert.html">Inserting points</a></li>
<li><a href="http://mikechambers.github.io/html5/javascript/QuadTree/examples/insert_bounds.html">Inserting items with bounds</a></li>
<li><a href="http://mikechambers.github.io/html5/javascript/QuadTree/examples/retrieve.html">Retrieving points</a></li>
<li><a href="http://mikechambers.github.io/html5/javascript/QuadTree/examples/retrieve_bounds.html">Retrieving items with bounds</a></li>
</ul>


<p>The basic code is pretty simple. Here is an example showing using the QuadTree to store and retrieve points:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">pointQuad</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">bounds</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">width</span><span class="o">:</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">height</span><span class="o">:</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">quad</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">QuadTree</span><span class="p">(</span><span class="nx">bounds</span><span class="p">,</span> <span class="nx">pointQuad</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//insert a random point</span>
</span><span class='line'><span class="nx">quad</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span><span class="mi">25</span><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">items</span> <span class="o">=</span> <span class="nx">quad</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span><span class="mi">20</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>And here is a simple example showing using the QuadTree to store and retrieve items with dimensions / bounds:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">bounds</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">width</span><span class="o">:</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">height</span><span class="o">:</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">quad</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">QuadTree</span><span class="p">(</span><span class="nx">bounds</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//insert a random point</span>
</span><span class='line'><span class="nx">quad</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">x</span><span class="o">:</span><span class="mi">12</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">y</span><span class="o">:</span><span class="mi">25</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">height</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">width</span><span class="o">:</span><span class="mi">25</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>      
</span><span class='line'><span class="kd">var</span> <span class="nx">items</span> <span class="o">=</span> <span class="nx">quad</span><span class="p">.</span><span class="nx">retrieve</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">11</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span> <span class="nx">height</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span> <span class="nx">width</span><span class="o">:</span><span class="mi">20</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Again, you can download all of the code from my <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/JavaScript/QuadTree">GitHub Repository</a>. It seems fairly solid at this point, but if you find any issues, or have any suggestions either fork the project, and submit the changes to me, or post them in the comments.</p>

<p>There is still a lot of room for optimization and improvement in the implementation, such as pre-allocating the nodes, but Ill leave that for another day.</p>

<p>Btw, big thanks to <a href="http://unitzeroone.com/blog/">Ralph Hauwert</a> for pointing me in the right direction for my project.</p>

<p>Post any questions or suggestions in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Enable English Translation for Japanese NHK Channel on Comcast]]></title>
    <link href="http://mikechambers.github.io/2011/03/12/how-to-enable-english-translation-for-japanese-nhk-channel-on-comcast/"/>
    <updated>2011-03-12T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/03/12/how-to-enable-english-translation-for-japanese-nhk-channel-on-comcast</id>
    <content type="html"><![CDATA[<p>Comcast has <a href="http://www.sfgate.com/cgi-bin/blogs/techchron/detail?entry_id=84840">made the Japanese NHK channel available for the next week</a>. It can be accessed via channel 330 on Comcast. The broadcast is in Japanese, but if you have an <a href="http://en.wikipedia.org/wiki/Second_audio_program">SAP</a> enabled TV or set top box, you can listen to a translation of the broadcast.</p>

<p>It took me a while to figure out how to enable secondary broadcast on my Comcast box, and I didn&rsquo;t find much info online, so I wanted to post it here in case anyone else was interested.</p>

<p>Using your remote, click the Menu Button, then go to:</p>

<p><em>Menu > Setup > Audio > Audio Setup > Default Audio Track</em></p>

<p>Set the Audio Track to &ldquo;<em>Espanol</em>&rdquo;</p>

<p>Right now, they are rotating between multiple languages (including English), and repeating tsunami warnings.</p>

<p>If you have info on how to access it for other Cable boxes, then post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Example : Creating Spiral Designs With Canvas, JavaScript and EaselJS]]></title>
    <link href="http://mikechambers.github.io/2011/02/09/example-creating-spirals-designs-with-canvas-and-easeljs/"/>
    <updated>2011-02-09T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/02/09/example-creating-spirals-designs-with-canvas-and-easeljs</id>
    <content type="html"><![CDATA[<p>I have been having fun playing around with JavaScript, the HTML5 Canvas element and <a href="http://www.easeljs.com">EaselJS</a> lately, and have been building a lot of small experiments. I wanted to share a simple one I created, which creates spiral designs.</p>

<p><a href="http://www.flickr.com/photos/mikechambers/5429181578/"><img src="http://farm6.static.flickr.com/5299/5429181578_ce3395c4e2_m.jpg" alt="title" /></a></p>

<p>The example was pretty simple to put together, but is fun to play with, and can make some pretty nice patterns / spirals. I have uploaded a couple of images that I have created using the example:</p>

<!--more-->


<p><a href="http://www.flickr.com/photos/mikechambers/5428579683/"><img src="http://farm6.static.flickr.com/5258/5428579683_82a6c9c317_m.jpg" alt="title" /></a></p>

<p><a href="http://www.flickr.com/photos/mikechambers/5428784263/"><img src="http://farm6.static.flickr.com/5098/5428784263_a6b3eafced_m.jpg" alt="title" /></a></p>

<p><a href="http://www.flickr.com/photos/mikechambers/5429181324/"><img src="http://farm6.static.flickr.com/5098/5429181324_5eac51ae97_m.jpg" alt="title" /></a></p>

<p>and put together a time lapse video showing a spiral being created:</p>

<div style="text-align:center;"><object type="application/x-shockwave-flash" width="400" height="225" data="http://www.flickr.com/apps/video/stewart.swf?v=71377" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"> <param name="flashvars" value="intl_lang=en-us&photo_secret=8e3c1c5b4c&photo_id=5430459320"></param> <param name="movie" value="http://www.flickr.com/apps/video/stewart.swf?v=71377"></param> <param name="bgcolor" value="#000000"></param> <param name="allowFullScreen" value="true"></param><embed type="application/x-shockwave-flash" src="http://www.flickr.com/apps/video/stewart.swf?v=71377" bgcolor="#000000" allowfullscreen="true" flashvars="intl_lang=en-us&photo_secret=8e3c1c5b4c&photo_id=5430459320" height="225" width="400"></embed></object></div>


<p>You can view the example at:<br/>
<a href="http://www.mikechambers.com/html5/easeljs/Spirals/index.html">http://www.mikechambers.com/html5/easeljs/Spirals/index.html</a></p>

<p>I have also <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/HTML5/EaselJS/Spirals">posted all of the code in my GitHub Repository</a>.</p>

<p>There is no UI to change settings, but you can tweak the designs you create by passing in some URL params, like so:</p>

<p><a href="http://www.mikechambers.com/html5/easeljs/Spirals/index.html?minradius=10&amp;maxradius=3000&amp;strokealpha=0.2&amp;spread=.8">/index.html?minradius=10&amp;maxradius=3000&amp;strokealpha=0.2&amp;spread=.8</a></p>

<p><strong>minradius</strong> : The minimum radius of the circle that will be drawn.<br/>
<strong>maxradius</strong> : The maximum radius of the circle that will be drawn.</p>

<p>If minradius and maxradius are different, the circle radius will tween back and forth between the sizes.</p>

<p><strong>strokealpha</strong> : A number between 0.0 and 1.0 that specifies the alpha of the stroke of the circle<br/>
<strong>spread</strong>: How quickly the spiral expands / opens up</p>

<p>Click the screen to start / pause the drawing.</p>

<p>Play around with different combinations of settings. If you create anything cool, or have any questions / suggestions, then post them below.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PixelFlow : EaselJS / Canvas Dynamic Graphics Example]]></title>
    <link href="http://mikechambers.github.io/2011/02/02/pixelflow-easeljs-canvas-dynamic-graphics-example/"/>
    <updated>2011-02-02T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/02/02/pixelflow-easeljs-canvas-dynamic-graphics-example</id>
    <content type="html"><![CDATA[<p>If you have happen to have been <a href="http://www.flickr.com/photos/mikechambers/sets/72157625744699667/">watching my Flickr feed</a> for the past week or two, you have probably noticed that I have been playing around with creating some graphics using Canvas and <a href="http://www.easeljs.com">EaselJS</a>. What started as a simple EaselJS experiment, quickly morphed into an excuse to build a mini app / example and play around with some of the new HTML5 and CSS3 features.</p>

<p><a href="http://www.mikechambers.com/html5/easeljs/PixelFlow/"><img src="http://farm6.static.flickr.com/5298/5411954907_6b2c4f902d.jpg" alt="title" /></a></p>

<p>The example I created (named PixelFlow) is a simple example / app that allows you to choose an image, and then create some designs using the colors from the image. The core drawing functionality is built about the HTML5 canvas element and the <a href="http://www.easeljs.com">EaselJS library</a>. It also leverages CSS3 transitions and transformation for animating the UI elements (loading and unloading).</p>

<p>You can play around with the example yourself at:</p>

<!--more-->


<p><a href="http://www.mikechambers.com/html5/easeljs/PixelFlow/">mikechambers.com/html5/easeljs/PixelFlow/</a></p>

<p>I built the example with touch in mind, and thus it has support for touch on Android and iOS devices. Of course, it also works on the desktop using mouse input.</p>

<p>Here is a video showing the example in action:</p>

<div style="text-align:center;"><iframe style="moz-box-shadow: 3px 3px 4px rgba(0,0,0,0.7);-webkit-box-shadow: 3px 3px 4px rgba(0,0,0,0.7);box-shadow: 3px 3px 4px rgba(0,0,0,0.7); title="" youtube="" video="" player"="" width="640" height="390" src="http://www.youtube.com/embed/JWsL-GMWXgc" frameborder="0" allowfullscreen=""></iframe></div>


<p>As you can see, the multitouch works really well on the iPad.</p>

<p>Huge thanks to <a href="http://twitter.com/griffithben">Ben Griffith</a> who saved me (and you) from my horrid design skills, and put together a great design for the example.</p>

<p>You can <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/HTML5/EaselJS/PixelFlow">download all of the code from my GitHub repository</a> (released under an MIT License). The code is completely commented, and should be pretty easy to follow.</p>

<p>The example uses the Canvas.toDataURL API to allow you to save and download your creations as a PNG. If you create anything cool, please post a link in the comments.</p>

<p><a href="http://www.flickr.com/photos/mikechambers/5412206089/"><img src="http://farm6.static.flickr.com/5096/5412206089_b24d2729c4_m.jpg" alt="title" /></a> <a href="http://www.flickr.com/photos/mikechambers/5405160833/"><img src="http://farm6.static.flickr.com/5060/5405160833_e54fe84113_m.jpg" alt="title" /></a></p>

<p>I have tested the example on the following browsers, all of which should work:</p>

<ul>
<li>iPad / iPhone iOS 4</li>
<li>Android 2.2.2 (Nexus One and Galaxy Tab)</li>
<li>Firefox 4 on Mac and Windows</li>
<li>Google Chrome on Mac and Windows</li>
<li>Apple Safari on Mac and Windows</li>
</ul>


<p>The example wont work on:</p>

<ul>
<li>Firefox 3.6 (doesn&rsquo;t support CSS Transitions)</li>
<li>Internet Explorer 8 and below (doesn&rsquo;t support Canvas)</li>
<li>Internet Explorer 9 (doesn&rsquo;t support CSS Transitions)</li>
</ul>


<p>I could have made changes so IE 9 would work (by removing the reliance on the transitions), but as this was an example to use off some of these features, I decided not to.</p>

<p>There are a couple of known issues:</p>

<ul>
<li>You can not save images on Android based devices, as they do not support the Canvas.toDataURL API.</li>
<li>Rendering is aliased while drawing on Android devices (which looks crappy).Once you stop drawing, everything looks fine.</li>
<li>Touch does not work on Firefox 4 devices, even if you are on a touch device. I haven&rsquo;t had a chance to implement the Firefox touch api yet as I haven&rsquo;t had a touch device with Firefox to test on.</li>
</ul>


<p>Below are some of the things that I learned while working on this:</p>

<h2>Touch support and APIs vary greatly between browsers</h2>

<p>Initially the app was mouse based, but I knew that I wanted to enable multitouch for it (at least on the iPad). While it took me some time to find solid docs on the iOS JavaScript <a href="http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html">multitouch</a> <a href="http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html">API</a>, once I figured it out I was really surprised by how solid and well designed it was. Indeed, the W3C just released a <a href="http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html#widl-TouchPoint-radiusX">draft multitouch specification</a> which is based (or <a href="http://schepers.cc/getintouch">inspired by</a>) the iOS API.</p>

<p>Since Safari on iOS is webkit based, I (naively?) expected that the same API would be present on Android based devices. However, I quickly discovered that while the API on Android is similar, it has nowhere near the level of implementation / quality as on iOS. For starters, while the API on Android is multitouch, the browser only supports a single touch point. Worse, if there are multiple touch points, you start getting some weird behavior (i.e. all <em>touchmove</em> events stop broadcasting).</p>

<p>This was frustrating, but I ended up settling on a single touch experience for Android devices (which still works pretty well).</p>

<p>I then realized that the <a href="http://hacks.mozilla.org/2010/08/firefox4-beta3/">Firefox 4 beta also had support for touch</a> (at least on Windows 7). I didn&rsquo;t have access to a touch screen on Windows to test though, so I was not able to implement it. However, the Firefox touch <a href="https://developer.mozilla.org/en/DOM/Touch_events">API</a> is significantly different than the iOS / Android APIs, and while it looks pretty straight forward, will require some additional detection and code paths in my code to deal with it (adding more complexity).</p>

<p>In general, I don&rsquo;t think touch support in the browser is there yet. If you can limit your content to just iOS devices, then you can create a very good experience that is relatively easy to develop. However, as soon as you start to support other devices, the complexity and issues dramatically rise.</p>

<h2>Canvas Implementations seem pretty solid</h2>

<p>With one exception, working with Canvas was pretty painless. I didn&rsquo;t run into any cross browser issues (although some of those may have been handled by EaselJS) while working with it.</p>

<p>I architected the drawing in my app in a way that performance shouldn&rsquo;t be a major issue, and it runs fine on both desktop and devices. However, I did have performance issues on the iPad when I added a second <a href="http://www.mikechambers.com/blog/2011/01/25/layering-multiple-canvas-elements-using-javascript-and-easeljs/">overlay canvas</a>, and had to end up removing it when running on touch devices.</p>

<p>I did have a minor hiccup when I realized that when exporting an image from the canvas using canvas.toDataURL, there is no background color. However, after some research into the Canvas API, I was <a href="http://www.mikechambers.com/blog/2011/01/31/setting-the-background-color-when-generating-images-from-canvas-todataurl/">able to work around this</a> in a pretty generic way..</p>

<p>The one major issue I did run into with Canvas was that I discovered that the <a href="http://www.mikechambers.com/blog/2011/02/01/detecting-canvas-todataurl-support-in-browsers/">toDataURL API is not implemented on Android</a>. Because of this, I had to remove the ability to save designs when running on Android. (Apparently this issue is fixed in the Android Honeycomb release).</p>

<p>Of course, Canvas is not supported in any release version of Internet Explorer, but aside from that (and it is a big aside), it worked really well everywhere I tested it.</p>

<h2>CSS Transitions Rock</h2>

<p>When you run the example, you will notice that UI elements slide in and out as a transition between views. Initially I was using JavaScript to tween the CSS position properties. This worked fine on the desktop, but was noticeably laggy when running on a device.</p>

<p>I then switched the transitions to use <a href="http://www.w3.org/TR/css3-transitions/">CSS3 Transitions</a> and Transforms which are hardware accelerated on iOS. Frankly, I was blown away by how well they performed (see the video above).</p>

<p>In general, working with the transitions was really easy. I trigger them from JavaScript, and then in some cases, listen for the event when they are done. The biggest issue that I had was that in a couple of instances I needed to chain a number of transitions together which was a bit cumbersome.</p>

<p>Of course, once I tested in other browsers, some complexity was added. In particular, Firefox has different names for the relevant properties and events. They work the same, but it did add some complexity to my code.</p>

<p>Everything that I read online said that in order for the CSS transitions to be hardware accelerated on iOS, you had to explicitly use the transform3d style. However, Apple seems to have updated the browser, as I found that the 2d transform was also accelerated.</p>

<p>Finally, CSS3 transitions work really well if you need to move something and then forget about it until it is done. It doesn&rsquo;t seem quite as useful though for something like a game, where an item may have to change its trajectory, or other properties while moving.</p>

<p>I did run into an iOS issue where if I referenced an Image element right before it was included in a transition, it would cause the drawing to completely flake out. Once I figured it out, it was easy enough to work around, but, given how new some of this stuff is, you should expect to hit odd issues like this every now and then.</p>

<h2>Stability / Quality</h2>

<p>In general, I didn&rsquo;t really run into any major cross browser problems until I began to use some of the new features and APIs. This is to be expected, as some of this stuff is pretty cutting edge, but it is something to keep in mind, especially if you have gotten used to not worrying about cross browser issues because of the maturity of a lot of the JavaScript libraries.</p>

<h2>I really like EaselJS</h2>

<p>I used the <a href="http://www.easeljs.com">EaselJS</a> library to handle the drawing and canvas management for me, and it worked out really well. It abstracted away a lot of the lower level details of working with the canvas, and allowed me to focus on just creating something neat / fun.</p>

<p>It&rsquo;s API is similar to the DisplayList API in Flash, which really helped me understand how to model everything.</p>

<p>In addition, I was able to contribute some of the code that I developed for this example, back to EaselJS, which will be included in the next release.</p>

<h2>CSS Media Queries really work!</h2>

<p>I initially was developing and testing on the desktop and on the iPad. Once I implemented the updated design from Ben, I discovered that it was completely unusable on smaller screens (iPhone and Nexus One). However, in about an hour, I was able to implement a new, small screen style sheet using <a href="http://www.w3.org/TR/css3-mediaqueries/">CSS media queries</a>, and my problem was solved.</p>

<p>It did require a couple of minor changes to the structure of the HTML, but in general, I was surprised by how easy it was to implement / tweak the design for smaller screens.</p>

<h2>The more complex the app became, the more cross browser / platform issues I ran into</h2>

<p>I know this is a &ldquo;no duh!&rdquo; point, but I think it is important enough to reiterate. It is very easy to build something cool just targeting one browser. However, you will run into issues when you start testing across browser, and those issues will multiply the more complex your content is.</p>

<p>In addition, a lot of the new features are not supported / abstracted away by JavaScript libraries yet, so expect a lot of lower level API implementations when using newer features and APIs (such as touch).</p>

<p>Once some of the implementations settle down, there is an opportunity for existing or new libraries to make this stuff easier, especially around touch and CSS transitions.</p>

<h2>Use only as much library as you need</h2>

<p>When I first started the project, I was using <a href="http://jquery.com/">jQuery</a> as the main DOM library for the app. However, I soon realized that jQuery is pretty large and that I wasn&rsquo;t using any of the jQuery UI elements. I was particularly concerned about size, as I wanted the example to run well on devices (and load quickly).</p>

<p>I searched around, and ended up settling on <a href="http://xuijs.com/">xui</a>, which is similar to jQuery. xui, which was built for use in <a href="http://www.phonegap.com/">PhoneGap</a>, doesn&rsquo;t try to do as much as jQuery, and has a strong focus on mobile (where the browser landscape is a bit less varied). Because of this, it is much smaller (around 8kb). It has worked great, although there have been one or two things which jQuery provided that XUI didn&rsquo;t.</p>

<p>If I needed more UI controls, then I would probably switch back to jQuery, but for this example, xui was perfect.</p>

<h2>Performance isn&rsquo;t just about performance</h2>

<p>One final note about performance. A couple of people that I have showed this to have commented that it feels a little slow, especially on the ipad. It is actually running full speed, but I have the graphics draw at a constant rate. This way, it creates nice and smooth lines and color shifts. On the desktop I have added a graphic which shows what the shape is doing, and where it is going. This makes it much clearer what is going on, and seems to shift the perceptions around performance. However, I wasn&rsquo;t able to add the overlay graphic on the iPad because the second canvas did affect negatively performance. Without the overlay though, the example runs at full speed, but there is a perception that it is running slow.</p>

<p>I think this demonstrates how important UI feedback and responsiveness are important to perceptions around performance. Being able to provide better feedback / UI to the user which indicates what is going on can help improve perceptions around performance.</p>

<p>Anyways, I had a lot of fun working on it, although I am ready to work on some new ideas. Feel free to hack, modify, or do whatever with the code. If you do something cool, or have any questions or suggestions, just post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Detecting Canvas.toDataURL Support in Browsers]]></title>
    <link href="http://mikechambers.github.io/2011/02/01/detecting-canvas-todataurl-support-in-browsers/"/>
    <updated>2011-02-01T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/02/01/detecting-canvas-todataurl-support-in-browsers</id>
    <content type="html"><![CDATA[<p>I am wrapping up a code example that uses the <a href="http://www.w3.org/TR/html5/the-canvas-element.html">Canvas.toDataURL</a> API to save canvas data to an image. I am almost done, and was doing a final round of browser testing when I noticed that my example wasnt working on my Android based Google Nexus One Device (2.2.2). After some debugging, and then Googling, I discovered that the Canvas.toDataURL API is not implemented on Android (you can view the bug report <a href="http://code.google.com/p/android/issues/detail?id=7901">here</a>).</p>

<p>Well, after some cursing, I put together a simple method for detecting whether the API is supported on any particular device. I wanted to share it in case anyone else might run into a need for it. So, here it is:</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">supportsToDataURL</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">c</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;data:image/png&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The code assumes that you are already checking for Canvas support.</p>

<p>Here is the script in action:</p>

<div><strong><script>function supports_canvas(){return!!document.createElement("canvas").getContext}function supportsToDataURL(){if(!supports_canvas())return false;var c=document.createElement("canvas");var data=c.toDataURL("image/png");return data.indexOf("data:image/png")==0}var results="";if(supportsToDataURL())results="You browser is cool and supports Canvas.toDataURL();";else results="You browser is lame and does NOT support Canvas.toDataURL();";document.write(results);</script></strong></div>


<p>and the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">supports_canvas</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">!!</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;canvas&#39;</span><span class="p">).</span><span class="nx">getContext</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">supportsToDataURL</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">supports_canvas</span><span class="p">())</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">c</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;data:image/png&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">results</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nx">supportsToDataURL</span><span class="p">())</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">results</span><span class="o">=</span><span class="s2">&quot;You browser is cool and supports Canvas.toDataURL();&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">results</span><span class="o">=</span><span class="s2">&quot;You browser is lame and does NOT support Canvas.toDataURL();&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">results</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you have any fixes or suggestions for the detection, post them in the comments.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting the Background Color When Generating Images From Canvas.toDataURL]]></title>
    <link href="http://mikechambers.github.io/2011/01/31/setting-the-background-color-when-generating-images-from-canvas-todataurl/"/>
    <updated>2011-01-31T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/01/31/setting-the-background-color-when-generating-images-from-canvas-todataurl</id>
    <content type="html"><![CDATA[<p>One of the cool features of the HTML5 canvas element is the <a href="http://www.w3.org/TR/html5/the-canvas-element.html">toDataURL</a> method. This returns a Base64 encoded image in the form of a data url string. Among other things, this can be displayed directly within an IMG element on the page, or sent to the server so the image can be saved.</p>

<p>However, one thing that I found out this weekend is that there is no background color for the image returned from toDataURL. Looking at the actual canvas draft specification, I found this:</p>

<!--more-->


<blockquote><p>For image types that do not support an alpha channel, the image must be composited onto a solid black background using the source-over operator, and the resulting image must be the one used to create the data: URL.</p></blockquote>

<p>Basically, if you are create an image type that supports transparency (such as PNG), the background will be transparent, otherwise, it will be black. When you think about it, it makes sense, as the canvas is a blank canvas, and only contains what is actually drawn to it. However, for an example I am working on right now, I needed to be able to specify a white background.</p>

<p>After some Googling failed turn up any solutions, I came up with my own solution which I thought I would share.</p>

<p>First, here is a simple demo:</p>

<iframe src="http://mikechambers.github.io/html5/canvas/exportWithBackgroundColor/" width="500" height="280"></iframe>


<p>Basically, click in the canvas on the left to draw some rectangles. When you click on one of the links, a PNG is generated from the canvas and displayed in the IMG element on the right. Each link creates an image with a different background color (none, solid red, red with 50% alpha).</p>

<p>You can <a href="https://github.com/mikechambers/ExamplesByMesh/tree/master/HTML5/canvas/exportWithBackgroundColor">view all of the code for the example</a> in my GitHub repository, but here is the relevant snippet:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//Returns contents of a canvas as a png based data url, with the specified</span>
</span><span class='line'><span class="c1">//background color</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">canvasToImage</span><span class="p">(</span><span class="nx">backgroundColor</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//cache height and width       </span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">w</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">h</span> <span class="o">=</span> <span class="nx">canvas</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">data</span><span class="p">;</span>        
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">backgroundColor</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//get the current ImageData for the canvas.</span>
</span><span class='line'>      <span class="nx">data</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">getImageData</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">w</span><span class="p">,</span> <span class="nx">h</span><span class="p">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">//store the current globalCompositeOperation</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">compositeOperation</span> <span class="o">=</span> <span class="nx">context</span><span class="p">.</span><span class="nx">globalCompositeOperation</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//set to draw behind current content</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">globalCompositeOperation</span> <span class="o">=</span> <span class="s2">&quot;destination-over&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//set background color</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">fillStyle</span> <span class="o">=</span> <span class="nx">backgroundColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//draw background / rect on entire canvas</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">fillRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//get the image data from the canvas</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">imageData</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">canvas</span><span class="p">.</span><span class="nx">toDataURL</span><span class="p">(</span><span class="s2">&quot;image/png&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nx">backgroundColor</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="c1">//clear the canvas</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">clearRect</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//restore it with original / cached ImageData</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">putImageData</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>     
</span><span class='line'>
</span><span class='line'>      <span class="c1">//reset the globalCompositeOperation to what it was</span>
</span><span class='line'>      <span class="nx">context</span><span class="p">.</span><span class="nx">globalCompositeOperation</span> <span class="o">=</span> <span class="nx">compositeOperation</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//return the Base64 encoded data url string</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">imageData</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Basically, here is what is going on:</p>

<ol>
<li>Get the ImageData from the canvas</li>
<li>Set the <code>globalCompositeOperation</code> to <code>destination-over</code>. This will make it where new drawing to the canvas will go UNDER existing graphics.</li>
<li>Draw a rectangle the size of the entire canvas with a fillStyle set to the background color we want to use (can be any valid HTML color format).</li>
<li>Generate the data url for the canvas.</li>
<li>Clear the entire canvas (including background).</li>
<li>Copy the original drawing data back into the canvas.</li>
<li>Reset the globalCompositeOperation value to what it was when we started.</li>
</ol>


<p>The key is the <a href="https://developer.mozilla.org/en/Canvas_tutorial/Compositing">globalCompositeOperation</a>, which allows you to control how new graphics are composited with existing graphics.</p>

<p>Now, this technique does require a number of full canvas writes, so be mindful of performance when using it (especially on mobile devices). However, in my testing, it performs well on both desktop and the iPad when running once in response to a user action.</p>

<p>I have added support for this to <a href="http://www.easeljs.com">EaselJS</a> in the form of a new <code>Stage.toImage(mimeType, backgroundColor)</code> method, which will be available in the next release of the library.</p>

<p>Post any comments, questions or suggestions below.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EaselJS / Canvas Generative Graphics Flickr Set]]></title>
    <link href="http://mikechambers.github.io/2011/01/26/easeljs-canvas-generative-graphics-flickr-set/"/>
    <updated>2011-01-26T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/01/26/easeljs-canvas-generative-graphics-flickr-set</id>
    <content type="html"><![CDATA[<p>Just a quick note, but I have created a <a href="http://www.flickr.com/photos/mikechambers/sets/72157625744699667/">Flickr set which contains some of the generative graphics</a> I have been creating using <a href="http://www.mikechambers.com/blog/tag/easeljs/">canvas, JavaScript and EaselJS</a>.</p>

<p><a href="http://www.flickr.com/photos/mikechambers/sets/72157625744699667/with/5390791220/"><img src="http://farm6.static.flickr.com/5092/5390791220_c17fc5dabb_m.jpg" alt="title" /></a></p>

<p>You can view the set <a href="http://www.flickr.com/photos/mikechambers/sets/72157625744699667/">here</a>.</p>

<p>I havent released all of the code used to create all of the examples, but I will release the code / examples as I finish them. Ill post new images on the set whenever I create something I think is interesting.</p>
]]></content>
  </entry>
  
</feed>
