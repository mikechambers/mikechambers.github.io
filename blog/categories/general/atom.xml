<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: General | Mike Chambers]]></title>
  <link href="http://mikechambers.github.io/blog/categories/general/atom.xml" rel="self"/>
  <link href="http://mikechambers.github.io/"/>
  <updated>2013-12-15T20:26:44-08:00</updated>
  <id>http://mikechambers.github.io/</id>
  <author>
    <name><![CDATA[Mike Chambers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple HTTP Server for Local Testing]]></title>
    <link href="http://mikechambers.github.io/2012/04/08/simple-http-server-for-local-testing/"/>
    <updated>2012-04-08T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2012/04/08/simple-http-server-for-local-testing</id>
    <content type="html"><![CDATA[<p>I am currently playing around with the <a href="http://www.html5rocks.com/en/tutorials/file/filesystem/">HTML5 FileSystem API</a>, and have a need to test my files served via a web server. I could setup a virtual director for my local apache server, but given the number of simple tests and experiments I do, I wanted something easier that required little to no configuration and setup.</p>

<p>So, I put together a super simple script that uses <a href="http://docs.python.org/library/simplehttpserver.html">python&rsquo;s SimpleHTTPServer class</a>.</p>

<!--more-->


<p>Here is the script (requires that python is installed and in your path)</p>

<p>``` bash</p>

<h1>!/bin/bash</h1>

<p>python -m SimpleHTTPServer $1
```</p>

<p>To use it, just switch the the directory that contains your files and run:</p>

<p><code>bash
http
</code></p>

<p>This will open a simple webserver on port 8000.</p>

<p>You can optionally pass in the port like so:</p>

<p><code>bash
http 2030
</code></p>

<p>Which will start a simple web server listening on port 2030.</p>

<p>Again, this is something really simple, but also very useful. If you need to quickly test a file, just switch to the directory and run the script.</p>

<p>Btw, another work around for playing with the FileSystem APIs would be to pass the:</p>

<p><code>bash
--allow-file-access-from-files
</code></p>

<p>to Chrome when launching it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[North American Flash Community Tour]]></title>
    <link href="http://mikechambers.github.io/2012/04/02/north-american-flash-community-tour/"/>
    <updated>2012-04-02T00:00:00-07:00</updated>
    <id>http://mikechambers.github.io/2012/04/02/north-american-flash-community-tour</id>
    <content type="html"><![CDATA[<p>Just as we did in Europe a couple of weeks ago, <a href="http://www.leebrimelow.com">Lee Brimelow</a> and I are doing a series of Flash get togethers in North America over the next couple of weeks. I will be talking about the <a href="http://www.adobe.com/go/flashplayer_whitepaper">roadmap for the Flash runtimes</a>, and leading a discussion around recent development in the Flash world. Lee will be showing off some of the new stuff we are working on around gaming.</p>

<p>Here are the cities and dates:</p>

<ul>
<li><a href="http://altdevblogaday.com/2012/04/02/extravagant-cheating-via-direct-x/">Denver : April 3</a></li>
<li><a href="http://meetu.ps/89800">Nashville : April 9</a></li>
<li><a href="http://www.meetup.com/Adobe-User-Group-of-Atlanta/events/56200162/">Atlanta : April 10</a></li>
<li><a href="http://eveningwithmikeandlee.eventbrite.com/">St Paul, April 11</a></li>
<li><a href="http://newyorkflexmeetup.eventbrite.com">New York, April 12</a></li>
</ul>


<p>We will also be doing meetings in San Francisco, LA, Chicago and Mexico City. Ill update this post once we finalize the details for those cities.</p>

<p>In addition to these events, Lee Brimelow is doing some additional events in Las Vegas and Tempe. Check out his <a href="http://www.leebrimelow.com/?p=3286">blog for more info</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In Europe to Discuss Flash Roadmap]]></title>
    <link href="http://mikechambers.github.io/2012/02/13/in-europe-to-discuss-flash-roadmap/"/>
    <updated>2012-02-13T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2012/02/13/in-europe-to-discuss-flash-roadmap</id>
    <content type="html"><![CDATA[<p>If you follow me on <a href="http://www.twitter.com/mesh/">twitter</a>, then you may have noticed that I have been working on a white-paper laying out the roadmap and strategy for the Flash runtimes (Flash Player and Adobe AIR). The white-paper is going through internal review now, and should be available in the next 7 to 10 days.</p>

<p>As part of the release of the white-paper, I, along with <a href="http://www.leebrimelow.com/?p=3261">Lee Brimelow</a>, and <a href="http://www.bytearray.org/">Thibault Imbert</a> will be spending two weeks in Europe meeting with the Flash community and laying out Adobe&rsquo;s vision and strategy for the Flash runtimes. This will be a good opportunity to speak directly with Adobe, ask questions, and general discuss recent changes around the Flash Player.</p>

<p>Here are the cities we will be visiting. Click through the links to find more information and to register for the events.</p>

<ul>
<li><a href="http://flashupdateparis.eventbrite.com/">February 22 : Paris</a></li>
<li><a href="http://www.lfpug.com/23rd-february-2012-23022012/">February 23 : London</a></li>
<li><a href="http://www.fitc.ca/events/presentations/presentation.cfm?event=125&amp;presentation_id=1783">February 26 : FITC Amsterdam</a></li>
<li><a href="http://www.flexughh.de/2012/01/18/future-of-flex-flash/">February 29 : Hamburg</a></li>
<li><a href="http://augportugal.eventbrite.com/">March 02 : Lisbon</a></li>
</ul>


<p>In addition to discussing the Flash roadmap, we will be showing off the latest Flash and Adobe AIR content, give some sneak peaks on upcoming releases, and setting aside plenty of time for open discussions and Q&amp;A.</p>

<p>The Flex team will be in Europe at the same time, discussing the future of Adobe Flex under the Apache organization. You can find information on the Flex tour <a href="http://blogs.adobe.com/flex/2012/02/flex-user-group-2012-tour-european-dates.html">here</a>.</p>

<p>We plan similar tours over the next couple of months for North and South America, and Asia. Ill post more info here once we have more details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clarifications on Flash Player for Mobile Browsers, the Flash Platform, and the Future of Flash]]></title>
    <link href="http://mikechambers.github.io/2011/11/11/clarifications-on-flash-player-for-mobile-browsers-the-flash-platform-and-the-future-of-flash/"/>
    <updated>2011-11-11T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/11/11/clarifications-on-flash-player-for-mobile-browsers-the-flash-platform-and-the-future-of-flash</id>
    <content type="html"><![CDATA[<p>I have worked with Flash and been part of the Flash community for about 12 or 13 years (over 10 of those with Macromedia and Adobe). Over that time there have been a lot of ups and down, but I think that the past couple of days have been some of the most difficult of my career. I wanted to make a post which will hopefully clarify some of the news from the past couple of days, and provide some more context around what is going on.</p>

<!--more-->


<p>First, and foremost, a couple of days ago Adobe <a href="http://blogs.adobe.com/conversations/2011/11/flash-focus.html">announced</a> the following:</p>

<ol>
<li>We are focusing work around the Flash Platform on:

<ul>
<li>Mobile Applications created with Adobe AIR.</li>
<li>Expressive content (particularly games and video) in the browser on the desktop via the Flash Player.</li>
</ul>
</li>
<li>We are further increasing the amount of resources (both money and engineer) toward HTML5 tools, solutions and browsers.</li>
<li>We are no longer going to be actively developing the Flash Player for Mobile Browsers.</li>
</ol>


<p>It is this last point which received the most attention, caused the most confusion, and essentially overshadowed all of the other information. Given the very public recent history of the Flash Player on devices this was understandable. However, it is clear that we did not do a good job of communicating why we are are making this shift in strategy. I know how frustrating this has been for the Flash community, and for that I want to apologize. Our goal was to be very clear about WHAT we were doing, but in doing so, we didn&rsquo;t pay enough attention to explaining WHY we were doing it.</p>

<p>So, please bear with me as this may up being a long post, but I want to talk about the why, as well as discuss what we see as the role of Flash on the web (especially in relation to HTML5).</p>

<p>First, I want to make it very clear that we are continuing to work on Adobe AIR for mobile applications, and have seen an increasing number of successful applications created with Adobe AIR. What we are halting is further development on the Flash Player plugin for mobile browsers. We will continue to provide critical bug fixes and security updates for existing device configuration, as well as continue to distribute the current player. At the same time, we are further increasing our investment (both in resources and engineers) in HTML5. I am not going to go into too much detail on this today, but, in general, we are shifting some resources from the Flash Platform and towards HTML5.</p>

<p>The decision to stop development of the Flash Player plugin for mobile browsers was part of a larger strategic shift at Adobe, one which includes a greater shift in focus toward HTML5, as well as the <a href="http://blogs.adobe.com/conversations/2011/11/adobe-creative-cloud-and-adobe-creative-suite-new-choices-for-customers.html">Adobe Creative Cloud</a> and the services that it provides. I am not going to go into detail on that today (I&rsquo;ll save that for another post), but you can get in-depth information on Adobe&rsquo;s strategy as a company by watching the Financial Analyst meeting (<a href="http://www.adobe.com/aboutadobe/pressroom/pressreleases/201111/110811AdobeFinancialAnalystMeeting.html">summary</a>, <a href="http://www.adobe.com/aboutadobe/invrelations/2011_analyst_mtg/2011analystmeeting.html">videos</a>) from a couple of days ago (it is long, but worth it).</p>

<h2>Why did Adobe Decide to no longer develop the Flash Player for Mobile Browsers?</h2>

<p>Considering how politically charged the issue has been, the decision to stop development of the Flash Player for Mobile Browsers was not an easy decision. However, at the end of the day, there were a number of items that made it clear that putting resources towards its continued development would not be the best use of resources.</p>

<h3>The Flash Player was not going to achieve the same ubiquity on mobile as it has on the desktop</h3>

<p>This one should be pretty apparent, but given the fragmentation of the mobile market, and the fact that one of the leading mobile platforms (Apple&rsquo;s iOS) was not going to allow the Flash Player in the browser, the Flash Player was not on track to reach anywhere near the ubiquity of the Flash Player on desktops.</p>

<p>This effectively meant that if you wanted to use Flash to deliver a rich web experience in the browser on mobile devices you would have to provide both a Flash based, as well as HTML5 based solution. Given the strong support for HTML5 across modern mobile devices, it simply made more sense to create an HTML5 based solution. Now, there are some exceptions to this, especially around advanced video content, but it is very clear that HTML5 is the solution to turn to if you want to provide a richer browser based experience that works across browsers on mobile devices.</p>

<p>Just to be very clear on this. No matter what we did, the Flash Player was not going to be available on Apple&rsquo;s iOS anytime in the foreseeable future.</p>

<h3>Ubiquity of HTML5 on mobile browsers</h3>

<p>Related to the point above, HTML5 has very strong support on modern mobile devices and tablets. Indeed, on mobile devices, it has a level of ubiquity similar to what the Flash Player has on the desktop. While performance and implementations haven&rsquo;t always been great or consistent across devices, they have continued to improve at a pretty dramatic rate (just look at the insane Canvas performance increases between iOS 4 and 5).</p>

<p>This new generation of smart phones and tablets (ushered in by the original Apple iPhone) are only a couple of years old. Because of this, the rendering engines deployed on these devices (most WebKit based) were all also relatively new and modern. The end result is that when developing for mobile devices and tablets today, you don&rsquo;t have to deal with legacy browsers as you do on the desktop.</p>

<p>On mobile devices HTML5 provides a similar level of ubiquity that the Flash Player provides on the desktop. It is the best technology for creating and deploying rich content to the browser across mobile platforms.</p>

<p>Our goal has always been to obtain the same level of ubiquity for the Flash Player on mobile browsers, but, at the end of the day, it is something that did not, and was not going to happen.</p>

<h3>Differences in how users consume rich content on mobile devices compared to the desktop</h3>

<p>On the desktop, users are used to consuming rich content (such as games and applications) via both the browser and native applications. However, on mobile devices users are much more likely to look exclusively toward applications for consuming rich content. The mobile platforms make it very easy to discover new content and applications by providing tight integration between the app stores (Apple App Store, Android Marketplace, etc..) and the mobile operating system. In general, users do not look to the web on mobile devices for finding and consuming rich content (such as games and applications).</p>

<p>There are a number of reasons for this, including:</p>

<ul>
<li>Differences in screen sizes, resolution and interaction models between mobile devices and desktop PCs</li>
<li>Generally slower, and higher latency network connections (which is often metered) on mobile devices, which makes it cumbersome, sometimes expensive, and sometimes impossible to repeatedly load rich content from the web on demand.</li>
<li>The tight integration with the underlying operating systems that native applications provide.</li>
<li>The tight integration between mobile app stores and the mobile operating systems, which removes most of the friction for discovering new content.</li>
</ul>


<p>When a user wants to play a game on a mobile device they turn to the app store for their platform. This makes it very easy for them to discover and install new content. This content can then be quickly accessed regardless of their network connectivity.</p>

<p>Essentially, users' preferences to consume rich content on mobile devices via applications means that there is not as much need or demand for the Flash Player on mobile devices as there is on the desktop.</p>

<h3>Scalability of developing plugins for mobile browsers</h3>

<p>Developing the Flash Player for mobile browsers has proven to require much more resources than we anticipated. When building the player for desktop browsers, we can target well defined plugin APIs provided by the browsers. While we do have close relationships will all of the browser vendors (including Google, Apple, Firefox, Microsoft), as a general rule we can do most of our development using the existing APIs.</p>

<p>However, in the mobile ecosystem, we have to work very closely with other companies engineers on a number of levels:</p>

<ol>
<li>Mobile Operating System Vendors (such as Google and RIM)</li>
<li>Hardware Device Manufacturers (such as Motorola and Samsung)</li>
<li>Component Manufacturers (such as NVIDIA)</li>
</ol>


<p>While we have good relationships on all levels of this ecosystem, having to do specific work for different combinations of OS, Hardware and event components has taken a significant amount of resources. For each new device, browser and operating system released, the resources required to develop, test and maintain the Flash Player also increases. This is something that we realized is simply not scalable or sustainable.</p>

<p>I have seen a couple of questions asking how Adobe AIR is different. There are a couple of differences which make AIR development significantly less resource intensive, including a more well defined API that we can target, as well as not needing to worry about differences in browsers or new browser versions. Ultimately though, developers are building successful applications with Adobe AIR, and thus it makes sense for us to continue to invest in it.</p>

<h3>Shifting some Resources from Flash to HTML5</h3>

<p>Finally, given the growth of HTML5 on both mobile and desktop browsers, we decided to more evenly balance our resources dedicate between Flash and HTML5.</p>

<p>Halting development on the Flash Player for mobile devices frees up resources for HTML5 development (tooling, frameworks, browsers).</p>

<p>I understand that not everyone may not agree with all of the conclusions drawn above. However, given these points, along with the increasing complexity and costs of developing the Flash Player for mobile browsers, we decided that further development was not the best use of our engineering resources.</p>

<h2>What does this mean for the Flash Platform in General?</h2>

<p>While there was some frustration around our dropping development of the Flash Player for mobile browsers, the main thing I saw was concern and confusion about how this would affect the Flash Platform as a whole. Were we still committed to it? Would we stop developing the Flash Player for the desktop? Is Flash really dead?</p>

<p>So, just to be very clear, contrary to what many have declared, Flash is not dead. It&rsquo;s role and focus has shifted but we feel that it still fills important roles both on the web and mobile platforms.</p>

<h3>Adobe AIR</h3>

<p>We are continuing to develop Adobe AIR for both the desktop and mobile devices. Indeed, we have seen wide adoption of Adobe AIR for creating mobile applications and there have been a number of blockbuster mobile applications created using Adobe AIR. Some recent examples of applications created for mobile devices using Adobe AIR are <a href="http://amanita-design.net/games/machinarium.html">Machinarium</a>, <a href="https://market.android.com/details?id=air.WatchESPN&amp;hl=en">Watch ESPN</a> and my personal favorite, <a href="http://tweethunt.net/">tweet hunt</a>.</p>

<h3>Flash Player for Desktop Browsers</h3>

<p>We feel that Flash continues to play a vital role of enabling features and functionality on the web that are not otherwise possible. As such, we have a long term commitment to the Flash Player on desktops, and are actively working on the next Flash Player version.</p>

<p>Of course, with the growth and continued improved browser support of HTML5, the role of Flash will change. We feel that for the foreseeable future, Flash is particularly strong in delivering advanced video, as well as providing a robust, and graphically rich gaming platform. We are focusing our Flash Player efforts around these areas.</p>

<p>Some of the features currently being worked on for the Flash Player:</p>

<ul>
<li><a href="http://www.leebrimelow.com/?p=3133">Mouse Lock Support</a></li>
<li>ActionScript Workers / Concurrency APIs</li>
<li>Telemetry / <a href="http://tv.adobe.com/watch/max-2011-sneak-peeks/max-2011-sneak-peek-monocle/">Monocle</a> Support</li>
<li>Audio API improvements, especially for better handling of low latency audio</li>
<li>New Datatypes for ActionScript 3</li>
</ul>


<p>We are also making some long term, and significant architectural changes, which will benefit the Flash Player (and developers) for years to come. This is still in the early stages, and we will have more information in the coming months.</p>

<h3>Adobe Flex</h3>

<p>I know there are a lot of questions around Adobe Flex. We are writing a separate blog post focused just on Flex which should be up shortly. I will update this post when it is live.</p>

<p>Update : The Flex Team has posted more info <a href="http://blogs.adobe.com/flex/2011/11/your-questions-about-flex.html">here</a>.</p>

<h3>Flash Professional</h3>

<p>I discussed the future of Flash Professional in a separate <a href="http://www.mikechambers.com/blog/2011/11/10/flash-professional-and-the-future/">blog post</a> yesterday, so I am not going go into detail on it here. As I stated yesterday, we are actively working on the next version of Flash Professional and have a long term commitment to it’s continued development.</p>

<h3>HTML5 and Flash</h3>

<p>Finally, I want to touch on some of my thoughts on Flash and HTML5.</p>

<p>From its beginning, Flash&rsquo;s primary role has been to enable things on the web that were not otherwise possible. Over its history, this has included things such as animation, vector graphics, sound, video, webcam and microphone support, and more. Because of its ubiquity and fast rate of adoption, it was uniquely suited to quickly introduce new features to the web.</p>

<p>Overtime, many of these Flash features were added to the browser. Time and time again, as the browsers matured things which were once done exclusively in Flash, were eventually done in the browser. The Flash Player would then add new features and the cycle would continue. This has happened over the entire history of Flash, and I expect, will continue to happen. This was something that was good for users (who got richer content earlier), Adobe (who got to sell tools and technologies), and browser vendors (who could focus their efforts on features which the Flash Player had proven to be popular and viable).</p>

<p>The key point is this. If a Flash feature is successful, it will eventually be integrated into the browser, and developers and users will access it more and more via the browser and not Flash.</p>

<p>With the renewed competition in the browser market and the subsequent acceleration of new HTML5 features being added to browsers, the number of things possible in the browser has dramatically increased. This includes a lot of overlap with features that were once exclusive to the Flash Player. While it will still be a while before HTML5 / CSS3 features have the same ubiquity as the Flash Player currently has, the trend is very clear. A lot of the things that you have done via Flash in the past, will increasingly be done via HTML5 and CSS3 directly in the browser.</p>

<p>I think that is important enough that I should repeat it.</p>

<p>A lot of the things that you have done via Flash in the past, will increasingly be done via HTML5 and CSS3 directly in the browser.</p>

<p>I know that this is a bit scary for a lot of people who have made their career working with Flash. I completely get that. However, I think it is a HUGE opportunity for the Flash community. As browser support for richer content and motion graphics improves, so will demand for designers and developers who have experience working with motion graphics on the web. The Flash community has been doing this type of work on the web for over a decade and is uniquely qualified to fill demand for similar work in the browser. I don&rsquo;t think it is a coincidence that some of the most cutting edge motion graphics work being done in HTML5 today is being done by developers and agencies with extensive experience in Flash (such as <a href="http://gskinner.com/">Grant Skinner</a>, <a href="http://automatastudios.com/the-endless-mural/">Branden Hall</a>, <a href="http://www.bigspaceship.com/">Big Spaceship</a>, etc&hellip;).</p>

<p>I am not suggesting that all Flash content should or will be done in HTML5. You have to look at each project on a case by case basis and make a decision based on development costs, target platforms and user experience. Regardless, your customers are going to ask about HTML5, and you should put yourself in a position to best meet their needs, regardless of technology or platform.</p>

<p>This has ended up much longer than I had expected, but I wanted to share a lot of stuff that has been going through my head over the past couple of days. Again, I understand the frustration about how all of this was originally communicated, and I want to apologize for that. I think it is pretty clear that we did not communicate the news and our views around Flash as clearly as we should have.</p>

<p>Please post and questions / comments below. Please keep all comments constructive and on topic (or else they may be moderated).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Professional and the Future]]></title>
    <link href="http://mikechambers.github.io/2011/11/10/flash-professional-and-the-future/"/>
    <updated>2011-11-10T00:00:00-08:00</updated>
    <id>http://mikechambers.github.io/2011/11/10/flash-professional-and-the-future</id>
    <content type="html"><![CDATA[<p>Yesterday was probably one of the most overwhelming days of my entire career. First, Adobe <a href="http://blogs.adobe.com/conversations/2011/11/flash-focus.html">informed</a> developers that we are going to stop developing the Flash Player for mobile browsers, then news came out that there were layoffs at Adobe, and finally, Adobe held a financial analyst meeting where we spelled out the <a href="http://blogs.adobe.com/conversations/2011/11/adobe-creative-cloud-and-adobe-creative-suite-new-choices-for-customers.html">Creative Cloud</a>, and the fundamental strategic shift Adobe is making.</p>

<p>All of this news is a lot to digest at once, and I know that there are a lot of questions and concerns from the community about what all of this means. I am working on another blog post which will address this from the Flash community&rsquo;s standpoint, but I wanted to make a quick post and debunk a rumor that has been going around about the future of Flash Professional.</p>

<!--more-->


<p>I have seen a couple of versions of it, but basically, the rumor is that the entire Flash Authoring team was laid off and that we are no longer developing Flash Professional.</p>

<p>Both of these rumors are false.</p>

<p>We are actively working on the next version of Flash Professional and have a long term commitment to it&rsquo;s continued development.</p>

<p>While there were layoffs on the team (as there were on a lot of other teams), we still have a team actively working on future versions of the tool. The Flash Professional team continues to have offices around the world, just as they did prior to the announcements. The core team, including product management and engineering members, continue and will continue to be based in San Francisco.</p>

<p>I can&rsquo;t go into a ton of detail about all of the new features and improvements included in the next version of Flash Professional (we gave a sneak of some of them at FOTB Brighton last month), but some of the new features include:</p>

<ul>
<li>SpriteSheet export for both <a href="http://www.starling-framework.org/">Starling</a> and HTML5 / Canvas. Lee Brimelow has a sneak <a href="http://www.leebrimelow.com/?p=3104">here</a>.</li>
<li>Support for packaging and exporting AIR applications for mobile that leverage native extensions.</li>
<li>Mobile prototyping and simulation for AIR apps.</li>
</ul>


<p>In addition to working on new features, we are also in the process of a pretty fundamental re-factoring and modernization of the tool&rsquo;s code base, which, among other things includes a de-carbonization of the tool on the mac platform. This is longer term project, being done in parallel with CS 6.0 development.</p>

<p>I am going to be speaking at FITC Tokyo in a couple of weeks, and will be showing some of the latest stuff we have been working on in Flash Professional.</p>

<p>I understand the confusion and frustration around everything that has been going on, and I know how difficult the past couple of days have been (probably the most difficult of my entire career). As I mentioned above, I am working on a broader blog post to discuss some of the news from yesterday, which will hopefully provide more information and clarification around all of the changes going on.</p>

<p>Please post any questions in the comments, and please keep comments on topic.</p>

<p>UPDATE : Just a quick reminder, but please keep comments on topic (about Flash Professional). I know there are a lot of questions about just about everything Flash, and I am working on a post to address them.</p>

<p>UPDATE : Added some clarification around team composition.</p>
]]></content>
  </entry>
  
</feed>
